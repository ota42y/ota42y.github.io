<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Text on おおたの物置</title>
    <link>http://ota42y.com/categories/text/</link>
    <description>Recent content in Text on おおたの物置</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 21 Jun 2015 23:43:02 +0900</lastBuildDate>
    <atom:link href="http://ota42y.com/categories/text/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>参加記録 Go Conference 2015 summer</title>
      <link>http://ota42y.com/blog/2015/06/21/gocon-2015-summer/</link>
      <pubDate>Sun, 21 Jun 2015 23:43:02 +0900</pubDate>
      
      <guid>http://ota42y.com/blog/2015/06/21/gocon-2015-summer/</guid>
      <description>

&lt;p&gt;今回は日経さんとCAさんがスポンサーとのことですが、&lt;br /&gt;
かなりの人がいるのにwifiが普通に繋がっていて凄かったです…&lt;br /&gt;
なんか機械も見たことも無い凄い奴でしたし。&lt;/p&gt;

&lt;p&gt;実際に運用してる上での話が多く、goの時代が来ている…！&lt;br /&gt;
という感じを受けました。&lt;br /&gt;
お仕事でほぼ使ってないのでちゃんと使いたいですねー&lt;/p&gt;

&lt;p&gt;また、みんなcode generateに走っているのはおもしろかったです。&lt;br /&gt;
コピペになるようなコードはgenerateするってのはほぼ統一見解ですね。&lt;/p&gt;

&lt;h1 id=&#34;キーノート&#34;&gt;キーノート&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;go1.5凄そうです&lt;/li&gt;
&lt;li&gt;go oracleのすごさ

&lt;ul&gt;
&lt;li&gt;関数がどこで使われているかが調べられる&lt;/li&gt;
&lt;li&gt;関数ポインタで呼ぶ場合も大丈夫&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;gomobile、早くiOSに対応してC++を駆逐してほしいです…&lt;/li&gt;
&lt;li&gt;公式の依存管理ツールも楽しみです&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;発表まとめ&#34;&gt;発表まとめ&lt;/h1&gt;

&lt;p&gt;発表順は覚えてないので、タイムテーブルに順不同で並べられている順です。&lt;/p&gt;

&lt;h2 id=&#34;gaurun-a-general-push-notification-server-in-go&#34;&gt;Gaurun〜A general push notification server in Go〜&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/cubicdaiya/a-general-push-notification-server-in-go&#34;&gt;https://speakerdeck.com/cubicdaiya/a-general-push-notification-server-in-go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;go製のpushサーバ&lt;/li&gt;
&lt;li&gt;モニタリング用のAPIを用意してるの、凄い良いなーと思いました。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;debugging-go-code-with-gdb&#34;&gt;Debugging Go Code with GDB&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://kaneshin.hateblo.jp/entry/2015/06/21/202850&#34;&gt;http://kaneshin.hateblo.jp/entry/2015/06/21/202850&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GDB、あんまり使いこなしてないのでもっとちゃんと使わないと…と思った。&lt;/li&gt;
&lt;li&gt;Goはコンパイル早いし、落ちたときにちゃんとどの行で落ちたか出してくれるし、無くても何とかなる感はあります

&lt;ul&gt;
&lt;li&gt;使った方が何倍も楽なのでちゃんと使った方が良いかと&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;go 1.5からコンパイラがgoで実装されるけど、吐き出されるバイナリにDWARFが入ってれば関係ないよね？

&lt;ul&gt;
&lt;li&gt;リリース直後はバグったDWARFになる可能性はありそう…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;フォントが$300ってwwwwww&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;generative-programming-in-go&#34;&gt;Generative programming in Go.&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/monochromegane/generative-programming-in-go&#34;&gt;https://speakerdeck.com/monochromegane/generative-programming-in-go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;reflection凄く遅いです…(直接呼ぶのと1000倍違う)&lt;/li&gt;
&lt;li&gt;金槌を持つと何でも釘に見える病…&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;gore-go-で-repl-のはなし&#34;&gt;gore - Go で REPL のはなし&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;irbみたいにgoを対話的に実行できるやつの内部事情&lt;/li&gt;
&lt;li&gt;go runしてるだけ&lt;/li&gt;
&lt;li&gt;go runに失敗しないように色々前処理をがんばってるみたいです。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;goと電子工作とロボット&#34;&gt;Goと電子工作とロボット&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;goでロボット制御できて、しかもスタンドアロンで動いていて凄いです&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;goのastをいじくって新しいツールを作る&#34;&gt;GoのASTをいじくって新しいツールを作る&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/vvakame/gocon-2015-summer&#34;&gt;http://www.slideshare.net/vvakame/gocon-2015-summer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;go/astを使うと、コード解析した結果みたいなのをとれるみたいです。

&lt;ul&gt;
&lt;li&gt;正規表現でがんばる！とかよりかは遙かに楽そう…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ただ、出力部分は気合いとのこと…&lt;/li&gt;
&lt;li&gt;怒りのスライドは良くわかります…

&lt;ul&gt;
&lt;li&gt;1byte=1文字、再帰的なパッケージ、err!=nilめんどい…(´･_･`)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;go言語でコマンドラインツールをつくるときに僕の語ること&#34;&gt;Go言語でコマンドラインツールをつくるときに僕の語ること&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/tcnksm/what-i-talk-about-when-i-talk-about-cli-tool-by-golang-number-gocon&#34;&gt;https://speakerdeck.com/tcnksm/what-i-talk-about-when-i-talk-about-cli-tool-by-golang-number-gocon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CLIツールは何となくこうした方が良いよね…って思ってたのがちゃんとまとめられてます&lt;/li&gt;
&lt;li&gt;さらに、それに沿ったテンプレートを作ってくれるものも作ったらしいです。凄い

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tcnksm/gcli&#34;&gt;https://github.com/tcnksm/gcli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;-vとかでバージョン確認したときに、最新バージョンをチェックするの頭良いですね

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tcnksm/go-latest&#34;&gt;https://github.com/tcnksm/go-latest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;patterns-for-building-a-scalable-testable-web-app-in-go&#34;&gt;Patterns for building a scalable, testable web app in Go&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sourcegraph.com/&#34;&gt;https://sourcegraph.com/&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;そもそもこのサービス知りませんでしたが、めっちゃ凄いです…(o゜▽゜)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ピクシブ社内広告サーバーでのgoの開発-運用&#34;&gt;ピクシブ社内広告サーバーでのGoの開発・運用&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://catatsuy.hateblo.jp/entry/2015/06/21/214229&#34;&gt;http://catatsuy.hateblo.jp/entry/2015/06/21/214229&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;goのサーバを実際に運用している上での知見が詰まってました。

&lt;ul&gt;
&lt;li&gt;nginxをフロントに立てることで、goサーバは特定の機能を素早く処理することに集中できるとか&lt;/li&gt;
&lt;li&gt;ホットデプロイするためにnginxとの間にunixソケット受付のアプリを立てておくとか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;CPU Throttlingによって混んでないときはレスポンスが遅い話がおもしろかったです。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1binary-自己完結型の-形態素解析器-kagome-を-作ってみた話&#34;&gt;1binary 自己完結型の 形態素解析器 kagome を 作ってみた話&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ikawaha.hateblo.jp/entry/2015/06/21/155636&#34;&gt;http://ikawaha.hateblo.jp/entry/2015/06/21/155636&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;辞書のエンコーディングに悩まなくて良いの凄く良いと思います。&lt;/li&gt;
&lt;li&gt;形態素解析説明が凄くわかりやすかったです

&lt;ul&gt;
&lt;li&gt;ただ、文脈IDをどう使ってるのか良くわかりませんでした…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;goで基盤システムつくってる話&#34;&gt;GOで基盤システムつくってる話&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;CAでLoL並の接続数を捌けるような基盤システムを作ってる話&lt;/li&gt;
&lt;li&gt;パッケージ管理やパッケージ構成…(´･_･`)&lt;/li&gt;
&lt;li&gt;標準パッケージは宝の山。goらしさを調べるにはうってつけとのこと

&lt;ul&gt;
&lt;li&gt;A Tour of GoやEffective Goの後に最適&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;lt&#34;&gt;LT&lt;/h2&gt;

&lt;h3 id=&#34;goのパッケージ構成で試行錯誤してみた話&#34;&gt;Goのパッケージ構成で試行錯誤してみた話&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/fkmhrk/go-49650783&#34;&gt;http://www.slideshare.net/fkmhrk/go-49650783&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;パッケージの分け方は特にgo特有のやり方はなく、他の言語とおんなじっぽいです&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;appengine-for-go-unittest&#34;&gt;AppEngine for Go Unittest&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;デバッグ用のサーバの立ち上げが遅いので、Unittestに時間がかかるそうです&lt;/li&gt;
&lt;li&gt;並列化しても最初の分の時間はやっぱりかかってしまうとのこと

&lt;ul&gt;
&lt;li&gt;起動しっぱなしにして、そこに接続して使うとかはダメなのでしょうか？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;golangで始めるハードウェアプログラミング&#34;&gt;Golangで始めるハードウェアプログラミング&lt;/h3&gt;

&lt;p&gt;メモり損ねました…(´･_･`)&lt;/p&gt;

&lt;h3 id=&#34;vendoring-golang&#34;&gt;vendoring @ golang&lt;/h3&gt;

&lt;p&gt;メモり損ねました…(´･_･`)&lt;/p&gt;

&lt;h3 id=&#34;gopherになれ&#34;&gt;「Gopherになれ！」&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;この人&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;コミケにgopher君がいた &lt;a href=&#34;http://t.co/cMyhSFgIwy&#34;&gt;pic.twitter.com/cMyhSFgIwy&lt;/a&gt;&lt;/p&gt;&amp;mdash; ななやん (@7yan00) &lt;a href=&#34;https://twitter.com/7yan00/status/549767136445333504&#34;&gt;2014, 12月 30&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;go製の拡張可能なslackbot-仮&#34;&gt;Go製の拡張可能なslackbot（仮）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://kyokomi.hatenablog.com/entry/2015/06/21/213610&#34;&gt;http://kyokomi.hatenablog.com/entry/2015/06/21/213610&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pluginの拡張をどうしてるのか謎でしたが、コードを読んで納得

&lt;ul&gt;
&lt;li&gt;パッケージのinit関数で、pluginsパッケージが保有するプラグインのリストに自分を登録する&lt;/li&gt;
&lt;li&gt;botがpluginsの中を読み込んで動作する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;goの使われ処&#34;&gt;Goの使われ処&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/qt_luigi/gofalseshi-warechu-ri-ben-falsehui-she-bian&#34;&gt;https://speakerdeck.com/qt_luigi/gofalseshi-warechu-ri-ben-falsehui-she-bian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5分間ひたすら採用している会社を羅列していました&lt;/li&gt;
&lt;li&gt;想像以上に多くて、盛り上がってるなーと思いました&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;k0kubun-pp-についてと-reflectパッケージとメタプログラミング&#34;&gt;k0kubun/pp についてと、reflectパッケージとメタプログラミング&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://k0kubun.hatenablog.com/entry/2015/06/21/195229&#34;&gt;http://k0kubun.hatenablog.com/entry/2015/06/21/195229&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ppをラップしただけの関数を定義しておくってのが凄い便利そうです

&lt;ul&gt;
&lt;li&gt;import書いたり消したりがとても面倒なので…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;メタプログラミングは…やっぱり現実的じゃ無いですよね&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;golangはじめて半日後に野球のアプリ書いてltしてきた&#34;&gt;Golangはじめて半日後に野球のアプリ書いてLTしてきた&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shinyorke.hatenablog.com/entry/2015/06/21/195656&#34;&gt;http://shinyorke.hatenablog.com/entry/2015/06/21/195656&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;やったことの時系列になってておもしろいです&lt;/li&gt;
&lt;li&gt;やっぱり学習コストは低いんですねー&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>参加記録 BPStudy#92</title>
      <link>http://ota42y.com/blog/2015/04/29/bpstudy92/</link>
      <pubDate>Wed, 29 Apr 2015 13:49:43 +0900</pubDate>
      
      <guid>http://ota42y.com/blog/2015/04/29/bpstudy92/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://bpstudy.connpass.com/event/12940/&#34;&gt;BPStudy#92&lt;/a&gt;に参加しました。&lt;br /&gt;
今回は経営やお金の話でした。&lt;/p&gt;

&lt;p&gt;お金って資本主義社会のベースとなる概念ですし、&lt;br /&gt;
インターネットの仕組みがどうなってるのかとか、&lt;br /&gt;
コンピュータがプログラムをどう解釈しているのかと同じぐらい、&lt;br /&gt;
お金の事を知っておいた方がいい気がする…と思って参加しました。&lt;/p&gt;

&lt;h1 id=&#34;エンシ-ニアの経営学&#34;&gt;エンジニアの経営学&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/bejita/bpstudy92&#34;&gt;http://www.slideshare.net/bejita/bpstudy92&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/bejita/ss-45051035&#34;&gt;http://www.slideshare.net/bejita/ss-45051035&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;一部詳しく書いている別資料&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;会社は環境の変数にめちゃくちゃ弱い&lt;/li&gt;
&lt;li&gt;2014年の倒産件数

&lt;ul&gt;
&lt;li&gt;9731件&lt;/li&gt;
&lt;li&gt;一日あたり26.6社が倒産している&lt;/li&gt;
&lt;li&gt;これでも前年比10%減&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;利益は車におけるガソリン

&lt;ul&gt;
&lt;li&gt;ガソリンが無いと走れない&lt;/li&gt;
&lt;li&gt;補給は常に必要&lt;/li&gt;
&lt;li&gt;ガソリンの供給源は売り上げのみ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;利益＝売り上げーコスト

&lt;ul&gt;
&lt;li&gt;利益に対するコストの比率が低い、低コストの方が良い&lt;/li&gt;
&lt;li&gt;コストが低い方が安定する

&lt;ul&gt;
&lt;li&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://twitter.com/ota42y&#34;&gt;@ota42y&lt;/a&gt; 必要な資金が少なければ少ないほど内部留保が溜まりやすく、変化に対応できるバッファが産まれるからです。ガソリン切れを起こすのが一番やってはいけないことなので、残るものが一緒なら使うカネが少ないほうが安定します。&lt;/p&gt;&amp;mdash; やきう大好きござ先輩 (@gothedistance) &lt;a href=&#34;https://twitter.com/gothedistance/status/593071626922504194&#34;&gt;2015, 4月 28&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;詳しくは二つ目の資料&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;全ての企業活動はコスト

&lt;ul&gt;
&lt;li&gt;資料作成、メールを打つ、問い合わせ対応&lt;/li&gt;
&lt;li&gt;それ自体は１円も生んでいない。&lt;/li&gt;
&lt;li&gt;そのコストを回収するのは売り上げしか無い。
サービス運営で食べていくのは大変&lt;/li&gt;
&lt;li&gt;オーダーメイドを作る方が簡単

&lt;ul&gt;
&lt;li&gt;お金も出してくれやすい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;サービス開発は必ず投資が先行する&lt;/li&gt;
&lt;li&gt;月額定額は青天井なので嫌われる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;組織運営

&lt;ul&gt;
&lt;li&gt;一人で全ては出来ない&lt;/li&gt;
&lt;li&gt;誰かにやってもらわないと組織運営は安定しない&lt;/li&gt;
&lt;li&gt;高いスキルを持った人を集めても、ゴミしか生み出せない場合もある&lt;/li&gt;
&lt;li&gt;Good Player is not Good Manager&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;チームの将来は決定の速度で決まる

&lt;ul&gt;
&lt;li&gt;引き延ばしは金と時間の無駄&lt;/li&gt;
&lt;li&gt;決定が遅いと間違いに気づくのも遅い&lt;/li&gt;
&lt;li&gt;決定の妥当性はいま判断できない&lt;/li&gt;
&lt;li&gt;Done is Better Than Perfect.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ゴールから逆算して物事を考える

&lt;ul&gt;
&lt;li&gt;ゴールを決めて、そこに至るためのマイルストーンを決めていく&lt;/li&gt;
&lt;li&gt;ゴールを決めてるから、ギャップも出せる&lt;/li&gt;
&lt;li&gt;リスクアセスメントも忘れずに。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;やっちゃいけないことを明確にする

&lt;ul&gt;
&lt;li&gt;これをやれには個人差が出る&lt;/li&gt;
&lt;li&gt;これはするなについては個人差は出ない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;判断基準を可能な限り簡単にする

&lt;ul&gt;
&lt;li&gt;〜かもしれない、〜すべきである、〜だったらどうするのかを無くす&lt;/li&gt;
&lt;li&gt;結果を出す＝なりようがない状態をつくる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;金にならないコードは負債

&lt;ul&gt;
&lt;li&gt;コードにはマネタイズが必須&lt;/li&gt;
&lt;li&gt;技術それ自体は１円にもならない&lt;/li&gt;
&lt;li&gt;技術は使われてこそ生きるもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;エキスパートの評価軸は一つ

&lt;ul&gt;
&lt;li&gt;周りに良い影響を与えられるか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;参考文献

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E3%80%8C%E8%B5%A4%E5%AD%97%E3%80%8D%E3%81%AE%E6%B5%B7%E3%81%A8%E3%80%8C%E5%88%A9%E7%9B%8A%E3%80%8D%E3%81%AE%E5%B0%8F%E5%B3%B6%E2%80%95%E4%BA%8B%E6%A5%AD%E3%81%AE%EF%BC%94%E5%89%B2%E3%81%AF%E4%B8%8D%E6%8E%A1%E7%AE%97%E3%81%AA%E3%81%AE%E3%81%AB%E6%94%B9%E5%96%84%E3%81%97%E3%81%AA%E3%81%84%E3%83%AF%E3%82%B1-%E3%82%B8%E3%83%A7%E3%83%8A%E3%82%B5%E3%83%B3%E3%83%BB%EF%BC%AC%E3%83%BB%EF%BC%B3%E3%83%BB%E3%83%90%E3%83%BC%E3%83%B3%E3%82%BA/dp/4532317339&#34;&gt;「赤字」の海と「利益」の小島―事業の４割は不採算なのに改善しないワケ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E3%81%A8%E3%81%82%E3%82%8B%E4%BC%9A%E7%A4%BE%E3%81%AE%E7%B5%8C%E7%90%86%E3%81%95%E3%82%93%E3%81%8C%E6%95%99%E3%81%88%E3%82%8B-%E6%A5%BD%E3%81%97%E3%81%8F%E3%82%8F%E3%81%8B%E3%82%8B-%E7%B0%BF%E8%A8%98%E5%85%A5%E9%96%80-%E6%9D%B1%E5%B1%B1-%E7%A9%A3/dp/4534049765&#34;&gt;とある会社の経理さんが教える 楽しくわかる! 簿記入門&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E3%81%93%E3%81%AE%EF%BC%91%E5%86%8A%E3%81%A7%E3%81%99%E3%81%B9%E3%81%A6%E3%82%8F%E3%81%8B%E3%82%8B-%E7%AE%A1%E7%90%86%E4%BC%9A%E8%A8%88%E3%81%AE%E5%9F%BA%E6%9C%AC-%E5%8D%83%E8%B3%80-%E7%A7%80%E4%BF%A1/dp/4534048459&#34;&gt;この１冊ですべてわかる　管理会計の基本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E7%A8%B2%E7%9B%9B%E5%92%8C%E5%A4%AB%E3%81%AE%E5%AE%9F%E5%AD%A6%E2%80%95%E7%B5%8C%E5%96%B6%E3%81%A8%E4%BC%9A%E8%A8%88-%E7%A8%B2%E7%9B%9B-%E5%92%8C%E5%A4%AB/dp/4532190061&#34;&gt;稲盛和夫の実学―経営と会計&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/5%E5%B9%B4%E3%81%A7%E5%A3%B2%E4%B8%8A2%E5%80%8D%E3%81%AE%E7%B5%8C%E5%96%B6%E8%A8%88%E7%94%BB%E3%82%92%E3%81%9F%E3%81%A6%E3%81%AA%E3%81%95%E3%81%84-%E5%B0%8F%E5%B1%B1-%E6%98%87/dp/404600097X&#34;&gt;5年で売上2倍の経営計画をたてなさい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/%EF%BC%A8%EF%BC%A1%EF%BC%B2%EF%BC%A4-%EF%BC%B4%EF%BC%A8%EF%BC%A9%EF%BC%AE%EF%BC%A7%EF%BC%B3-%E3%83%99%E3%83%B3%E3%83%BB%E3%83%9B%E3%83%AD%E3%82%A6%E3%82%A3%E3%83%83%E3%83%84/dp/4822250857&#34;&gt;ＨＡＲＤ　ＴＨＩＮＧＳ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;エンジニアのためのお金の話&#34;&gt;エンジニアのためのお金の話&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;会計、キャッシュフロー、税務

&lt;ul&gt;
&lt;li&gt;全て同じお金の物差し&lt;/li&gt;
&lt;li&gt;TPOに応じて物差しを持ち帰ることが大切&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;会計

&lt;ul&gt;
&lt;li&gt;複式簿記に書かれる売上と実際のお金の動きは別

&lt;ul&gt;
&lt;li&gt;納品して検収したタイミングで売上（収益）になる&lt;/li&gt;
&lt;li&gt;検収したタイミングで費用（負債）になる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;売上と負債を対応づけたのが貸借対照表&lt;/li&gt;
&lt;li&gt;収益と費用を対応づけたのが損益計算書&lt;/li&gt;
&lt;li&gt;会計は実際のお金の動きなしで完結する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;キャッシュフロー

&lt;ul&gt;
&lt;li&gt;お金が入るのは代金回収時&lt;/li&gt;
&lt;li&gt;お金が出るのは外注費を払った時点&lt;/li&gt;
&lt;li&gt;それらをまとめたのがキャッシュフロー計算書

&lt;ul&gt;
&lt;li&gt;貸借対照表、損益計算書、キャッシュフロー計算書が財務三票&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;黒字倒産

&lt;ul&gt;
&lt;li&gt;利益は出てるけど、お金が無くて倒産する

&lt;ul&gt;
&lt;li&gt;収益は上がっても代金を回収するまではお金が手元に無い状態&lt;/li&gt;
&lt;li&gt;利益とお金の動きは別物&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;回避策&lt;/li&gt;
&lt;li&gt;回収サイトは短く、支払いサイトは長く

&lt;ul&gt;
&lt;li&gt;外注先からは短くしたいので、好きに長く取れない&lt;/li&gt;
&lt;li&gt;日本では一般的に末締め翌月払い&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;運転資金を手元に置く&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;貸倒

&lt;ul&gt;
&lt;li&gt;取引先が倒産して回収できない&lt;/li&gt;
&lt;li&gt;そのまま費用になる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;税務

&lt;ul&gt;
&lt;li&gt;所得＝益金ー損金

&lt;ul&gt;
&lt;li&gt;大体会計と同じ概念&lt;/li&gt;
&lt;li&gt;ただし、個々の要素に微妙な差異がある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;費用≠損金

&lt;ul&gt;
&lt;li&gt;貸倒してもそのまま損金にならない場合がある&lt;/li&gt;
&lt;li&gt;利益が無くても税金がかかる場合&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>参加記録 DroidKaigi</title>
      <link>http://ota42y.com/blog/2015/04/26/droidkaigi/</link>
      <pubDate>Sun, 26 Apr 2015 12:49:12 +0900</pubDate>
      
      <guid>http://ota42y.com/blog/2015/04/26/droidkaigi/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://droidkaigi.connpass.com/event/13216/&#34;&gt;DroidKaigi&lt;/a&gt;に参加してきたのでメモ。&lt;/p&gt;

&lt;p&gt;Twitterで流れてくる情報によると、あっちのセッションもおもしろそう…&lt;br /&gt;
みたいなのがあったので、ちゃんとセッションの概要も読んで天秤にかけるべきでした。&lt;br /&gt;
（エクセルシートから該当のセッションを探すのが大変だったので挫折した）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Activity, Fragment, CustomView の使い分け - マッチョなActivityにさよならする方法 -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/yanzm/droid-kaigi2015-yanzm&#34;&gt;http://www.slideshare.net/yanzm/droid-kaigi2015-yanzm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ActivityはFragmentのブセット的な印象。&lt;/li&gt;
&lt;li&gt;Fat Activityになりやすい場合はViewとか他の部分にコードを分割しましょうというお話っぽい。

&lt;ul&gt;
&lt;li&gt;RailsのFat Controller問題?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Fragmentにできる事はそっちにどんどん任せて、ActivityはActivityにしか出来ない部分に集中しようってこと？&lt;/li&gt;
&lt;li&gt;Activityにしか出来ないことが多すぎるからFat Activity問題になってたので、
似たようなことが出来るけどライフサイクルをコントロールできるクラスの登場によって、
処理の分割ができるようになった感じ？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;開発を効率的に進めるられるまでの道程&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/TakaoSumitomo/ss-47393000&#34;&gt;http://www.slideshare.net/TakaoSumitomo/ss-47393000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コードを書くのとテストを書くのが一番開発で大変なところ&lt;/li&gt;
&lt;li&gt;どんな風にテストしているかの事例紹介

&lt;ul&gt;
&lt;li&gt;ダミーを作ってがんばる感じ&lt;/li&gt;
&lt;li&gt;複数の間を取り持つクラスは疎通確認のみ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;あるゲームアプリケーションの構成とアップデートサイクル&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/kentaroiizuka/droidkaigi&#34;&gt;http://www.slideshare.net/kentaroiizuka/droidkaigi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;様々なリソースから、バイナリやアップデータを作るまでをすべてJenkinsがやっている

&lt;ul&gt;
&lt;li&gt;専用のパイプラインエンジニアがいるらしい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/KLab/PlaygroundOSS/&#34;&gt;Playground&lt;/a&gt;つよい

&lt;ul&gt;
&lt;li&gt;Cocosはお察しなできなので… (´・ω・｀)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Luaでゲーム部分を書く

&lt;ul&gt;
&lt;li&gt;ゲーム部分以外はフレームワークが吸収&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;リソースの追加ダウンロードとかもフレームワーク側が持っているらしい

&lt;ul&gt;
&lt;li&gt;ゲーム側はゲームとしての実装に専念できるっぽい&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Android学ぶを君へ。生き抜くためのナレッジ共有&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/operando/DroidKaigi&#34;&gt;https://github.com/operando/DroidKaigi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;有用な情報がたくさん&lt;/li&gt;
&lt;li&gt;adbが思っていた以上に優秀だった

&lt;ul&gt;
&lt;li&gt;任意のアプリのViewTreeが見られるらしい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;テスト書こう&lt;/li&gt;
&lt;li&gt;発表と関連する資料が全部まとまっているの凄い便利&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Kotlin&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/ntaro/xin-yan-yu-kotlindeandroidpuroguramiingu&#34;&gt;https://speakerdeck.com/ntaro/xin-yan-yu-kotlindeandroidpuroguramiingu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Better Java凄い&lt;/li&gt;
&lt;li&gt;Javaで面倒なところを一通りつぶしてくれてる感じ&lt;/li&gt;
&lt;li&gt;Android Studioのプラグインもしっかり対応している様子&lt;/li&gt;
&lt;li&gt;静的型付けだけどちゃんと型推論してくれるので便利&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;モバイルにおける電力最適化のための1プラクティス&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アプリの電力測定をする

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.brilliantservice.co.jp/works/power_kit.html&#34;&gt;http://www.brilliantservice.co.jp/works/power_kit.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;こんな感じのを作る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;満充電状態なら、電源ケーブルを通る電力は大体アプリのために使われる仮定

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://strawberry-linux.com/catalog/items?code=12031&#34;&gt;https://strawberry-linux.com/catalog/items?code=12031&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;どれくらいの電気が使われたかを測定する&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;通信や描画が何度も起きるアプリは消費量も多め&lt;/li&gt;
&lt;li&gt;何をしているかで消費量はだいぶ違う&lt;/li&gt;
&lt;li&gt;全体の平均値より、スポットごとの値を比較した方が良い&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;アプリを公開する前に、最低限知っておきたいセキュリティ事項&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.taosoftware.co.jp/blog/2015/04/cf5c5d90.html&#34;&gt;http://www.taosoftware.co.jp/blog/2015/04/cf5c5d90.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;セキュリティ学習ツールAnCoLe

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.ipa.go.jp/security/vuln/ancole/&#34;&gt;https://www.ipa.go.jp/security/vuln/ancole/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;権限管理をしっかりとする&lt;/li&gt;
&lt;li&gt;デバッグコードやライブラリが変な挙動をしないか精査する

&lt;ul&gt;
&lt;li&gt;広告SDKは信頼できる物一覧がある&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.androider.jp/dev/archives/3087&#34;&gt;http://blog.androider.jp/dev/archives/3087&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;その他&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;複数セッションなのでもう片方も見たいのばかり…

&lt;ul&gt;
&lt;li&gt;特にARTとXMLの話は聞きたかった…&lt;em&gt;(:3 」∠)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/MakotoYamazaki/20150425-droidkaigi-gradle&#34;&gt;http://www.slideshare.net/MakotoYamazaki/20150425-droidkaigi-gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/kmt-t/art-47396171&#34;&gt;http://www.slideshare.net/kmt-t/art-47396171&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/sola1980/androidse-linux&#34;&gt;http://www.slideshare.net/sola1980/androidse-linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/yuki930/ss-47398513&#34;&gt;http://www.slideshare.net/yuki930/ss-47398513&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/chocomelonchan/droidkaigi&#34;&gt;https://speakerdeck.com/chocomelonchan/droidkaigi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/yulily100/tesainakaxmlwoshu-kuahurikai-fa-huro&#34;&gt;https://speakerdeck.com/yulily100/tesainakaxmlwoshu-kuahurikai-fa-huro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/misyobun/da-rong-liang-detafalsedaunrodozhan-lue&#34;&gt;https://speakerdeck.com/misyobun/da-rong-liang-detafalsedaunrodozhan-lue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>参加記録 第四回　ゲームサーバ勉強会</title>
      <link>http://ota42y.com/blog/2015/04/19/game-server-4/</link>
      <pubDate>Sun, 19 Apr 2015 11:03:24 +0900</pubDate>
      
      <guid>http://ota42y.com/blog/2015/04/19/game-server-4/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://peatix.com/event/81553&#34;&gt;第四回　ゲームサーバ勉強会&lt;/a&gt;に参加しました。&lt;br /&gt;
サーバにはあんまり詳しくないですが、そういう人向けの勉強会なので助かりました。&lt;br /&gt;
特に名前は聞いたことがあるけど使ったことないorちょっと触ったぐらいの物の理解がある程度深まりました。&lt;/p&gt;

&lt;h1 id=&#34;idc-frontierさんの話&#34;&gt;IDC Frontierさんの話&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;IDCクラウドの話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.idcf.jp/cloud/&#34;&gt;http://www.idcf.jp/cloud/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;最小プランが500円からとのこと…安い&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ゲームでも採用事例あり。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gihyo.jp/admin/column/01/vm/2014/nanohain02&#34;&gt;http://gihyo.jp/admin/column/01/vm/2014/nanohain02&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ascii.jp/elem/000/000/952/952870/&#34;&gt;http://ascii.jp/elem/000/000/952/952870/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;ゲームサーバの作り方&#34;&gt;ゲームサーバの作り方&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/honyax/ss-47136625&#34;&gt;http://www.slideshare.net/honyax/ss-47136625&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;簡単なチャットサーバの作り方&lt;/li&gt;
&lt;li&gt;ゲームサーバも基本的なメッセージやりとり部分はチャットサーバみたいな物。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;fluentdとembulkの話&#34;&gt;fluentdとembulkの話&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/repeatedly/fluentd-and-embulk-game-server-4&#34;&gt;http://www.slideshare.net/repeatedly/fluentd-and-embulk-game-server-4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;外部からはjsonで入力するが、内部はMessagePackらしい&lt;/li&gt;
&lt;li&gt;tg-agentはfluentdにRubyインタプリタやプラグインをまとめてセットアップしやすくしたもの&lt;/li&gt;
&lt;li&gt;とりあえずfluentdに送って、そこから適切な場所に割り振る使い方みたい&lt;/li&gt;
&lt;li&gt;組み込み環境向け

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fluent/fluent-bit&#34;&gt;https://github.com/fluent/fluent-bit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Windows環境で動くやつ

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fluent/fluentd-forwarder&#34;&gt;https://github.com/fluent/fluentd-forwarder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;名前の通り、ログをfluentdに転送するものっぽい？&lt;/li&gt;
&lt;li&gt;これ本体で分類とかはせず、転送先のfluentdで転送する用途？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;embulk

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/embulk/embulk&#34;&gt;https://github.com/embulk/embulk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ファイルから一気にデータを入れる用&lt;/li&gt;
&lt;li&gt;失敗時に必要なファイルだけ再処理できる&lt;/li&gt;
&lt;li&gt;データから形式を推測する機能もある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;fluentd-ui

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fluent/fluentd-ui&#34;&gt;https://github.com/fluent/fluentd-ui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;fluentdのWebUI&lt;/li&gt;
&lt;li&gt;データ処理のための正規表現をテストできる機能がある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;データ欠損

&lt;ul&gt;
&lt;li&gt;ストリーム処理はデータ欠損が出てしまうもの&lt;/li&gt;
&lt;li&gt;欠損が許されないものに使うのは危険

&lt;ul&gt;
&lt;li&gt;課金ログとか&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;欠損率0%の人もいるらしい

&lt;ul&gt;
&lt;li&gt;構成による？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;通信失敗とかはfluentdが検知するのでそれで欠損はしない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;負荷がたかいいんだから-仮&#34;&gt;負荷がたかいいんだから～♪（仮）&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;ゲームの負荷対策と負荷試験の話&lt;/li&gt;
&lt;li&gt;memcached

&lt;ul&gt;
&lt;li&gt;全部メモリに乗ってるKVS&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;レプリケーション遅延

&lt;ul&gt;
&lt;li&gt;(たぶん)masterへの変更がslaveに変更される前に読み込んでデータがおかしくなった&lt;/li&gt;
&lt;li&gt;水平分割して対処

&lt;ul&gt;
&lt;li&gt;特定のIDは特定のDBに書き込むようにする&lt;/li&gt;
&lt;li&gt;1台あたりのリクエスト数を減らす？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;NoSQL

&lt;ul&gt;
&lt;li&gt;Cassandra

&lt;ul&gt;
&lt;li&gt;リング型ノードになるため単一障害点がなくなるらしい&lt;/li&gt;
&lt;li&gt;DHT？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;トランザクション処理は基本弱い

&lt;ul&gt;
&lt;li&gt;そういうところはMySQLで&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;負荷試験

&lt;ul&gt;
&lt;li&gt;リリース前に想定人数をちゃんと裁けるかのテスト

&lt;ul&gt;
&lt;li&gt;リリースしてから落ちにくい&lt;/li&gt;
&lt;li&gt;チューニングしやすい

&lt;ul&gt;
&lt;li&gt;テーブル構造の変更とかしやすい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;JMeter

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jmeter.apache.org/&#34;&gt;http://jmeter.apache.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;サーバに負荷をかけるツール&lt;/li&gt;
&lt;li&gt;アクセスをプロクシして、テストケースを作る機能があるらしい&lt;/li&gt;
&lt;li&gt;プログラムで負荷をかけると、プログラムが悪いのかサーバが悪いのかわからない&lt;/li&gt;
&lt;li&gt;プログラムがロックして遅かったりとか&lt;/li&gt;
&lt;li&gt;Socket.IOは対応していない

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/maciejzaleski/JMeter-WebSocketSampler&#34;&gt;https://github.com/maciejzaleski/JMeter-WebSocketSampler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;これを使うと動かせる&lt;/li&gt;
&lt;li&gt;プロトコルが若干違うのでその辺が大変らしい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>参加記録 GolangNotHttpNight（Gunosy.go#12）</title>
      <link>http://ota42y.com/blog/2015/04/14/golang-no-http-night/</link>
      <pubDate>Tue, 14 Apr 2015 22:39:40 +0900</pubDate>
      
      <guid>http://ota42y.com/blog/2015/04/14/golang-no-http-night/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://gunosygo.connpass.com/event/13139/&#34;&gt;GolangNotHttpNight（Gunosy.go#12）&lt;/a&gt;&lt;br /&gt;
に参加しました。&lt;/p&gt;

&lt;p&gt;ほぼ周りにgolangを使っている人がほとんどおらず、&lt;br /&gt;
情報がほぼ入ってこない環境にいるため、&lt;br /&gt;
ためになる話ばかりで、とても有意義な時間でした。&lt;/p&gt;

&lt;h1 id=&#34;gomaについて&#34;&gt;gomaについて&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/kyokomi/gomanituite&#34;&gt;https://speakerdeck.com/kyokomi/gomanituite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kyokomi/goma&#34;&gt;https://github.com/kyokomi/goma&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://doma.seasar.org/tutorial/&#34;&gt;Doma&lt;/a&gt;インスパイア&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;DBのテーブルから対応する構造体とCRUD用の関数を作ってくれるみたい&lt;/li&gt;
&lt;li&gt;DBへのアクセスは書き出されたSQLファイルを使う

&lt;ul&gt;
&lt;li&gt;SQLはgo-bindataでバイナリに入れ込む&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;いくつかライブラリを利用するが、作成されるコードには含まれないらしい

&lt;ul&gt;
&lt;li&gt;テーブル情報を取得するために&lt;a href=&#34;https://github.com/go-xorm/xorm&#34;&gt;xorm&lt;/a&gt;を利用&lt;/li&gt;
&lt;li&gt;SQLファイル書き出しのために&lt;a href=&#34;https://github.com/benbjohnson/ego&#34;&gt;ego&lt;/a&gt;を利用&lt;/li&gt;
&lt;li&gt;CLI用に&lt;a href=&#34;https://github.com/codegangsta/cli&#34;&gt;cli&lt;/a&gt;を利用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;golintを使おう&#34;&gt;golintを使おう&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;いろいろ細かい所までチェックしてくれるgolintの話&lt;/li&gt;
&lt;li&gt;pre-commitで実行するといい&lt;/li&gt;
&lt;li&gt;よくわかってなかったのでちゃんと使おう&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;go-timeout-もしくはunixツールをgolangで書く話&#34;&gt;go-timeout、もしくはUnixツールをgolangで書く話&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://songmu.github.io/slides/gunosygo-12/#0&#34;&gt;http://songmu.github.io/slides/gunosygo-12/#0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mackerel-agentはgo製

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mackerelio/mackerel-agent&#34;&gt;https://github.com/mackerelio/mackerel-agent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;サーバ監視用の情報をmackarelに送る

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mackerel.io/&#34;&gt;https://mackerel.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;pluginで拡張できる

&lt;ul&gt;
&lt;li&gt;外部コマンドとして呼んでるだけ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;pluginが無限ループしたりするとブロックしてしまう

&lt;ul&gt;
&lt;li&gt;一定時間後にKILLするようにした

&lt;ul&gt;
&lt;li&gt;timeoutコマンドのようなものをgoで実装&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;golang-raspiで趣味的iot入門的な話&#34;&gt;Golang+Raspiで趣味的IoT入門的な話&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/ymatsuwitter/golang-plus-raspidequ-wei-de-iotru-men-de-nahua&#34;&gt;https://speakerdeck.com/ymatsuwitter/golang-plus-raspidequ-wei-de-iotru-men-de-nahua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Raspberry PiでIoT

&lt;ul&gt;
&lt;li&gt;armなのでgoでクロスコンパイル可能&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Gobot

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gobot.io/&#34;&gt;http://gobot.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;いろんなデバイスをかなり抽象化された形で利用できる&lt;/li&gt;
&lt;li&gt;ロボットにパーツをつけていくメタファ&lt;/li&gt;
&lt;li&gt;対応していないと使えないけど、対応しているととても便利っぽい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;embed

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kidoman/embd&#34;&gt;https://github.com/kidoman/embd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;低レベルなライブラリ&lt;/li&gt;
&lt;li&gt;GPIOを直接触れるみたい&lt;/li&gt;
&lt;li&gt;Arduinoプログラミングに近い印象&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;プログラムよりもデータシートとの格闘が大変…&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;goでのステート管理の仕方&#34;&gt;Goでのステート管理の仕方&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/ssuser939b6b/state-managementingo20150413&#34;&gt;http://www.slideshare.net/ssuser939b6b/state-managementingo20150413&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GoでFSMを実装

&lt;ul&gt;
&lt;li&gt;いくつか書き方がある&lt;/li&gt;
&lt;li&gt;末尾最適化しない影響でうまくいかなかったり

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ymotongpoo.hatenablog.com/entry/2015/02/23/165341&#34;&gt;http://ymotongpoo.hatenablog.com/entry/2015/02/23/165341&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;goと設定ファイル&#34;&gt;Goと設定ファイル&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://speakerdeck.com/cubicdaiya/gototoml&#34;&gt;https://speakerdeck.com/cubicdaiya/gototoml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TOMLの話&lt;/li&gt;
&lt;li&gt;advanced-ini&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/BurntSushi/toml&#34;&gt;https://github.com/BurntSushi/toml&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;goのTOML実装&lt;/li&gt;
&lt;li&gt;構造体に直接変換したり、その逆も出来る&lt;/li&gt;
&lt;li&gt;ライセンスが下品

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ja.wikipedia.org/wiki/WTFPL&#34;&gt;http://ja.wikipedia.org/wiki/WTFPL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;goでゲームを作る&#34;&gt;Goでゲームを作る&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://go-talks.appspot.com/github.com/guregu/slides/engi/engi.slide#1&#34;&gt;http://go-talks.appspot.com/github.com/guregu/slides/engi/engi.slide#1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ajhager/engi&#34;&gt;https://github.com/ajhager/engi&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;goのゲームライブラリ&lt;/li&gt;
&lt;li&gt;描画とゲームループは提供してるみたい&lt;/li&gt;
&lt;li&gt;音は出せないけど、別のを使うらしい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;夏コミで頒布予定&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;dbじゃないoracleの話&#34;&gt;DBじゃないoracleの話&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/damemekam/dboracle-gunosygo12&#34;&gt;http://www.slideshare.net/damemekam/dboracle-gunosygo12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ソースコード解析をしてくれるツール、oracle

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://godoc.org/golang.org/x/tools/oracle&#34;&gt;https://godoc.org/golang.org/x/tools/oracle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE並の機能があるみたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;いろんなエディタに対応可能

&lt;ul&gt;
&lt;li&gt;atom用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atom.io/packages/go-oracle&#34;&gt;https://atom.io/packages/go-oracle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;こういうツールが整っている環境すばらしい

&lt;ul&gt;
&lt;li&gt;go fmtとかも凄くいいと思う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;gocon2015-summer&#34;&gt;GoCon2015 Summer&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/takuyaueda967/goconsummer&#34;&gt;http://www.slideshare.net/takuyaueda967/goconsummer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;とりあえず日程が出た&lt;/li&gt;
&lt;li&gt;会場探し中らしい&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;その他&#34;&gt;その他&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;GojiなるWebフレームワークが良いらしい

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zenazn/goji&#34;&gt;https://github.com/zenazn/goji&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>参加記録 第6回ニコニコ学会β　データ研究会</title>
      <link>http://ota42y.com/blog/2015/04/12/niconico_data_6/</link>
      <pubDate>Sun, 12 Apr 2015 21:03:35 +0900</pubDate>
      
      <guid>http://ota42y.com/blog/2015/04/12/niconico_data_6/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://niconicodatasig6.peatix.com/&#34;&gt;第6回ニコニコ学会β　データ研究会&lt;/a&gt;に参加しました。&lt;/p&gt;

&lt;h1 id=&#34;基調講演&#34;&gt;基調講演&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;日立のH

&lt;ul&gt;
&lt;li&gt;スペシャリストのデータに基づいた施策より、超詳細なデータから計算した施策の方が有効

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://web-tan.forum.impressrd.jp/e/2015/03/06/19423&#34;&gt;http://web-tan.forum.impressrd.jp/e/2015/03/06/19423&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;人間では見つけられない要因を特定できる

&lt;ul&gt;
&lt;li&gt;スキルより休憩中の雑談の盛り上がりが重要だったり&lt;/li&gt;
&lt;li&gt;膨大なデータの因果関係を調べ上げるのは人間には無理&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ウェアラブルハピネスメーター

&lt;ul&gt;
&lt;li&gt;人は動き続けているほど止まらなくなる

&lt;ul&gt;
&lt;li&gt;T時間動き続けると、止まる確率が1/T&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;実際のデータと1/Tとの乖離が高くなると、集団の幸福度が低下する

&lt;ul&gt;
&lt;li&gt;1/Tに近いほど集団が幸福度が高くなる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;幸福度と業務の生産性は直結する

&lt;ul&gt;
&lt;li&gt;1/Tを上げることが生産性を上げることになる&lt;/li&gt;
&lt;li&gt;生産性や幸福度に関連するデータを短いスパンで計測することができる

&lt;ul&gt;
&lt;li&gt;日々のKPIとして利用できそうなところが革新的っぽい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pc.watch.impress.co.jp/docs/news/20150209_687505.html&#34;&gt;日立、集団の幸福感を測定する技術を開発 - PC Watch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;参考

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.amazon.co.jp/%E3%83%87%E3%83%BC%E3%82%BF%E3%81%AE%E8%A6%8B%E3%81%88%E3%81%96%E3%82%8B%E6%89%8B-%E3%82%A6%E3%82%A8%E3%82%A2%E3%83%A9%E3%83%96%E3%83%AB%E3%82%BB%E3%83%B3%E3%82%B5%E3%81%8C%E6%98%8E%E3%81%8B%E3%81%99%E4%BA%BA%E9%96%93%E3%83%BB%E7%B5%84%E7%B9%94%E3%83%BB%E7%A4%BE%E4%BC%9A%E3%81%AE%E6%B3%95%E5%89%87-%E7%9F%A2%E9%87%8E%E5%92%8C%E7%94%B7/dp/4794220685/&#34;&gt;データの見えざる手: ウエアラブルセンサが明かす人間・組織・社会の法則&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;後で買う&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;人狼知能&#34;&gt;人狼知能&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;脱初心者！経験は人狼力を向上させるのか？～データから見るベテランの実力～

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/toritorix/ss-46899953&#34;&gt;http://www.slideshare.net/toritorix/ss-46899953&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;人狼BBSの分析&lt;/li&gt;
&lt;li&gt;陣営ごとの平均プレイ回数が多い方が勝率が高い

&lt;ul&gt;
&lt;li&gt;運ゲーじゃなかった&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;経験によるスキル向上

&lt;ul&gt;
&lt;li&gt;占い師

&lt;ul&gt;
&lt;li&gt;的中率は変化なし&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;狩人

&lt;ul&gt;
&lt;li&gt;上級者ほど護衛成功しやすい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;人狼への投票率

&lt;ul&gt;
&lt;li&gt;ちょっとだけ高い&lt;/li&gt;
&lt;li&gt;上級者が複数人の陣営はわりと高くなる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;個人の経験より集団の経験の方が強い&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;人狼知能プロジェクト

&lt;ul&gt;
&lt;li&gt;人狼BBSのデータセットとか公開するらしい&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.aiwolf.org/&#34;&gt;http://www.aiwolf.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;能力者はどれくらい勝利に貢献するのか？の話

&lt;ul&gt;
&lt;li&gt;同じ人数で特定の能力者がいる/いない場合の勝率を計算

&lt;ul&gt;
&lt;li&gt;その能力者による勝利への貢献度合いが相対的にわかる&lt;/li&gt;
&lt;li&gt;ロジスティック回帰分析で解析&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;結果

&lt;ul&gt;
&lt;li&gt;占い師&amp;gt;人狼&amp;gt;狩人&amp;gt;共有者&amp;gt;狂人&amp;gt;霊能者&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;村人

&lt;ul&gt;
&lt;li&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p&gt;結果。占い師最強。村人はゴミ &lt;a href=&#34;https://twitter.com/hashtag/%E3%83%8B%E3%82%B3%E3%83%8B%E3%82%B3%E5%AD%A6%E4%BC%9A?src=hash&#34;&gt;#ニコニコ学会&lt;/a&gt; &lt;a href=&#34;http://t.co/gmVrLtS3Qb&#34;&gt;pic.twitter.com/gmVrLtS3Qb&lt;/a&gt;&lt;/p&gt;&amp;mdash; myrmecoleon (@myrmecoleon) &lt;a href=&#34;https://twitter.com/myrmecoleon/status/587138559770935298&#34;&gt;2015, 4月 12&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;ul&gt;
&lt;li&gt;占い師は人狼より強い&lt;/li&gt;
&lt;li&gt;霊能力者は使えない&lt;/li&gt;
&lt;li&gt;村人はゴミ（いないよりマシ）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;結果から状況に応じた行動指針

&lt;ul&gt;
&lt;li&gt;複数COした場合、占い師2人の時以外は総吊り

&lt;ul&gt;
&lt;li&gt;占い師三人＝真占い、人狼、狂人（または人狼）&lt;/li&gt;
&lt;li&gt;占い師＜人狼＋狂人（または人狼）なので、全員吊った方がよい&lt;/li&gt;
&lt;li&gt;霊能力者の場合も同じく&lt;/li&gt;
&lt;li&gt;占い師＞人狼なので、占い師2人の場合は手を出さないのが吉&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;人狼側で占い2人COの場合

&lt;ul&gt;
&lt;li&gt;相手を襲撃するのが良い&lt;/li&gt;
&lt;li&gt;占い師＞人狼なので、道連れにした方が得&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;狂人は占い師を騙るべき

&lt;ul&gt;
&lt;li&gt;霊能力者はダメ、村人は論外&lt;/li&gt;
&lt;li&gt;狩人も占い師を騙るべき&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;役職なしの人狼の勝率計算

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://arxiv.org/abs/1009.1031&#34;&gt;http://arxiv.org/abs/1009.1031&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;この結果が対面戦でも有効なのか気になる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;人狼でわかるコミュ力の正体

&lt;ul&gt;
&lt;li&gt;人狼はコミュニケーションの中で相手の嘘を見抜くのと、相手を説得するのを両方やるゲーム&lt;/li&gt;
&lt;li&gt;人狼での必要な行動を論理的に記述できる言語を作ったらしい

&lt;ul&gt;
&lt;li&gt;AI人狼と対戦できる

&lt;ul&gt;
&lt;li&gt;つよい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;初音ミクに人狼をやらせてみた

&lt;ul&gt;
&lt;li&gt;AI人狼

&lt;ul&gt;
&lt;li&gt;一瞬で決着がついておもしろくない&lt;/li&gt;
&lt;li&gt;対面だとおもしろいのに&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;人狼をミクがプレイするようにした

&lt;ul&gt;
&lt;li&gt;モーション等もつけられるようになってる&lt;/li&gt;
&lt;li&gt;動画は限定公開中らしい…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;lt&#34;&gt;LT&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;初心者向け「凛ちゃん」

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/__john_smith__/rin-chan-46900896&#34;&gt;http://www.slideshare.net/__john_smith__/rin-chan-46900896&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;イ゛エ゛ロ゛ー゛タ゛ヨ゛ォ゛ォ゛ォ゛&lt;/li&gt;
&lt;li&gt;2chのスレで同名キャラの誰について話しているかを分類する

&lt;ul&gt;
&lt;li&gt;SVMで解析

&lt;ul&gt;
&lt;li&gt;68%の正解率&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;DeepLearning

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://h2o.ai/&#34;&gt;http://h2o.ai/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;62%の正解率…&lt;/li&gt;
&lt;li&gt;まだ収束してないのでもっと上がるかもとのこと&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;「さくら」で分析したらもっとやばそう…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;E2D3の話

&lt;ul&gt;
&lt;li&gt;Excel上でD3.jsが動く

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://e2d3.org/?lang=ja&#34;&gt;http://e2d3.org/?lang=ja&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;便利そう(o゜▽゜)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;商業ボーイズラブの集計〜男性向けエロマンガを添えて〜

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/file/d/0B2uGN8G1iUFiOFh0czVabGFzVXM&#34;&gt;https://docs.google.com/file/d/0B2uGN8G1iUFiOFh0czVabGFzVXM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;男性向けよりも肉体的な関係より、精神的な関係を好むらしい

&lt;ul&gt;
&lt;li&gt;これは百合マンガと比較した場合もBLに特徴的なのか気になる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ありらいおん deviantARTを調べてみた

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.deviantart.com/&#34;&gt;http://www.deviantart.com/&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;北米のすごいpixiv&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;規模的にはpixivの倍ぐらいらしい&lt;/li&gt;
&lt;li&gt;300万人で3億投稿&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Evernoteのリンクをアプリで開くChrome拡張を更新した</title>
      <link>http://ota42y.com/blog/2015/01/31/evernote-opener-update/</link>
      <pubDate>Sat, 31 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2015/01/31/evernote-opener-update/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/evernote-url-opener/pjkgaadffbojkgoocbobikkklpajjbgo&#34;&gt;evernote url opener&lt;/a&gt;を更新しました。&lt;/p&gt;

&lt;p&gt;使うためには、EvernoteのユーザIDとShardを調べる必要がありますが、&lt;br /&gt;
ちょっと面倒だったので、ユーザが自分のノートリンクをペーストするだけで、設定するように変更しました。&lt;/p&gt;

&lt;p&gt;Evernoteからコピーできる、&lt;br /&gt;
&lt;code&gt;https://www.evernote.com/shard/USER_SHARD//WORD/USER_ID/NODE_ID/&lt;/code&gt;&lt;br /&gt;
といった形式のリンクを張ることで、USER_SHARDとUSER_IDを保存します。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>参加記録 情報科学若手の会冬の陣2015</title>
      <link>http://ota42y.com/blog/2015/01/25/wakate2015w/</link>
      <pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2015/01/25/wakate2015w/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://atnd.org/events/61060&#34;&gt;情報科学若手の会冬の陣2015 #wakate2015w&lt;/a&gt;に参加しました&lt;br /&gt;
&lt;a href=&#34;http://togetter.com/li/773792&#34;&gt;Togetterまとめ&lt;/a&gt;&lt;br /&gt;
会場は電源完備＆大きめの机が椅子に着いているという豪華仕様でした&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;黒崎優太 (@kuro_m88)  ICTトラブルシューティングコンテストの紹介&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://icttoracon.net/&#34;&gt;http://icttoracon.net/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ネットワーク版CTFみたいなコンテスト&lt;/li&gt;
&lt;li&gt;Ciscoがスポンサーについているので、高価な機材がいっぱい用意されるみたい&lt;/li&gt;
&lt;li&gt;大きな規模のネットワークであれこれするのって普通じゃ出来ないし、面白そうです。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;浅野智之 (@asanon_s)  Webの世界に散らばるデータをつなぐ技術&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;semantic webやPDFの話&lt;/li&gt;
&lt;li&gt;人間が読めれば良い形式から、構造化されて機械も読める形式を加えるみたい&lt;/li&gt;
&lt;li&gt;なんとなく理解が深まった気がします&lt;/li&gt;
&lt;li&gt;完全なsemantic webへの道のりはまだまだ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;門脇香子  証明プログラミング入門&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/ussopyon/ss-43846794&#34;&gt;http://www.slideshare.net/ussopyon/ss-43846794&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lepidum.co.jp/blog/2014-06-05/CCS-Injection/&#34;&gt;OpenSSLの脆弱性をCoqで見つけた話&lt;/a&gt;を聞いてから、証明プログラミング凄そうだけどよくわからない状態だったので、
理解が深まりました。&lt;/li&gt;
&lt;li&gt;何を証明すれば良いかを補完してくれるのは便利そうでした&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;佐野岳人  コードを書けば複素数が分かる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/taketo1024/ss-43853048&#34;&gt;http://www.slideshare.net/taketo1024/ss-43853048&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;初めて複素数が何なのかを感覚的に理解できた気がする…&lt;/li&gt;
&lt;li&gt;デモで関数をインタラクティブに可視化しているのが本当に凄かった&lt;/li&gt;
&lt;li&gt;ここから使える&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/taketo1024/SwiftComplex&#34;&gt;https://github.com/taketo1024/SwiftComplex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;辻順平 (@tsujimotter)    日曜数学のススメ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/junpeitsuji/2015-43856733&#34;&gt;http://www.slideshare.net/junpeitsuji/2015-43856733&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;コンパスと定規で作図可能かどうかを判定するガウスの判定法凄い&lt;/li&gt;
&lt;li&gt;折り紙だと四次方程式が解けるので、作図できなくても折れる場合があるとか凄い&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;池尻良平  ニュースと類似した歴史を求めるアルゴリズムを考えてみた – 役に立つ歴史教育を目指して&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;現代のニュースと、それに類似する歴史上の出来事を提示するシステムを作っているそうです&lt;/li&gt;
&lt;li&gt;過去にどんな解決策をとって、どういう結果になったかを考えるのにとても便利そうです&lt;/li&gt;
&lt;li&gt;早く使ってみたいですね&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;後藤紳   モバイルデータを用いた行動予測&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;あんまり書いちゃいけなさそうなので割愛&lt;/li&gt;
&lt;li&gt;GPSの行動ログを蓄積して、次に何をしそうか提示するみたいです&lt;/li&gt;
&lt;li&gt;同じような日々を送っている人には効果的っぽいです&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;宮代理弘 (@3846masa)  Processin.ga – Webで書いてスマホで動かすサイト開発話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://processin.ga/&#34;&gt;http://processin.ga/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://3846masa.hatenablog.jp/entry/2015/01/25/011802&#34;&gt;http://3846masa.hatenablog.jp/entry/2015/01/25/011802&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Processingをブラウザ上で書いて動かし、かつスマホでもリアルタイムに動かせるサイトです&lt;/li&gt;
&lt;li&gt;無ければ作る、あっても作る&lt;/li&gt;
&lt;li&gt;デザインはパクるもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;湯村翼 (@yumu19) 野生の研究について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://yumulog.hatenablog.com/entry/2015/01/25/020313&#34;&gt;http://yumulog.hatenablog.com/entry/2015/01/25/020313&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;そもそもアーカイブ形式が動画だと、後から調べるのがとても大変になる気がします&lt;/li&gt;
&lt;li&gt;今は何とかなってるけど、数年、数十年と続いていくと辛いかと&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;宮下芳明  明治大学宮下研究室の活動とABProの紹介&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linear vs Circular&lt;/li&gt;
&lt;li&gt;この研究が凄かった&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=S1Roi2NOmx8&#34;&gt;https://www.youtube.com/watch?v=S1Roi2NOmx8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;懇親会&#34;&gt;懇親会&lt;/h1&gt;

&lt;p&gt;一晩寝たらだいたい忘れるという…(´･_･`)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;courseraで英語勉強&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/&#34;&gt;https://www.coursera.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ちょうど機械学習とかやってみたかったのでよさそう(o゜▽゜)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自動作曲の話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;歌詞を入れると自動でお音をつけてくれる&lt;/li&gt;
&lt;li&gt;日本語の音節？を見て色々やってるらしい？&lt;/li&gt;
&lt;li&gt;ミクと組み合わせて、詩を書ければ曲が書けるとか良さそう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;その他&#34;&gt;その他&lt;/h1&gt;

&lt;p&gt;何か発表したい人生だった…&lt;em&gt;(:3 」∠)&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>参加記録 Jenkins ユーザ・カンファレンス 2015 東京</title>
      <link>http://ota42y.com/blog/2015/01/11/jenkins-conference/</link>
      <pubDate>Sun, 11 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2015/01/11/jenkins-conference/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://build-shokunin.org/juc2015/&#34;&gt;Jenkins ユーザ・カンファレンス 2015 東京&lt;/a&gt;に参加しました。&lt;br /&gt;
&lt;a href=&#34;http://togetter.com/li/765735&#34;&gt;Togetterまとめ&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;発表まとめ&#34;&gt;発表まとめ&lt;/h1&gt;

&lt;h2 id=&#34;アンケート結果&#34;&gt;アンケート結果&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;参加申し込み時のアンケート結果&lt;/li&gt;
&lt;li&gt;多くの人のjobの数が1〜数個程度&lt;/li&gt;
&lt;li&gt;Jenkins無くても生きていける人が30％ぐらい&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;思ったよりもみんなJenkinsを使い込んでいない印象&lt;/li&gt;
&lt;li&gt;アンケート結果は後日公開&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;jenkinsプロジェクトの現状とワークフロー&#34;&gt;Jenkinsプロジェクトの現状とワークフロー&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;DotCiが良さそう

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/groupon/DotCi&#34;&gt;https://github.com/groupon/DotCi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jenkinsを他のCIサービスみたいにする&lt;/li&gt;
&lt;li&gt;Github限定&lt;/li&gt;
&lt;li&gt;設定をYAMLファイルで管理出来たりする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Workflow Pluginすごい

&lt;ul&gt;
&lt;li&gt;Build Flow Pluginをいっそう強化した版&lt;/li&gt;
&lt;li&gt;ビルドが失敗しても途中から再開とかも出来る&lt;/li&gt;
&lt;li&gt;乗り換えよう&lt;/li&gt;
&lt;li&gt;ただ、DSLを覚えたりと学習コストが高くなるので秘伝のタレ化の危険が&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;jenkinsとseleniumの活用事例-試験自動化のプロジェクトへの導入&#34;&gt;JenkinsとSeleniumの活用事例：試験自動化のプロジェクトへの導入&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;アジャイル開発だとイテレーション毎に試験項目は増えていくが、開発後半になるほど試験に割ける時間は減る

&lt;ul&gt;
&lt;li&gt;あるあるすぎる&lt;/li&gt;
&lt;li&gt;試験自動化で試験項目の消化にかかるコストを下げる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;スクリーンショットを撮って画像比較して変更検知

&lt;ul&gt;
&lt;li&gt;静的な画面なら効果的っぽい&lt;/li&gt;
&lt;li&gt;アニメーションする場合は撮るタイミングによりそうなので、目で比較かなぁ…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;テストケースの保守大変そう

&lt;ul&gt;
&lt;li&gt;ちょっと変わっただけで使えなくなるし&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;jenkinsを使ったコンシューマゲームでのデプロイとテスト&#34;&gt;Jenkinsを使ったコンシューマゲームでのデプロイとテスト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/swiftnest/jenkins-43394510&#34;&gt;http://www.slideshare.net/swiftnest/jenkins-43394510&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;圧縮して6GB、11万ファイルのプロジェクト

&lt;ul&gt;
&lt;li&gt;2プラットフォーム2言語にビルド&lt;/li&gt;
&lt;li&gt;これで中規模ぐらいと凄い世界が…

&lt;ul&gt;
&lt;li&gt;FFとかどんだけなんだろう…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;フルビルドに14時間かかる

&lt;ul&gt;
&lt;li&gt;リソースの事前処理に時間がかかる

&lt;ul&gt;
&lt;li&gt;リソース内での分岐処理が遅いため、全条件分のリソースを作る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;データを実機上でビルドする必要がある

&lt;ul&gt;
&lt;li&gt;携帯機は貧弱なので差分ビルドでも4時間かかったりする&lt;/li&gt;
&lt;li&gt;プラットフォームで互換性なし&lt;/li&gt;
&lt;li&gt;PS3はビッグエンディアン&lt;/li&gt;
&lt;li&gt;VITAはリトルエンディアン&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ファイルをパックするのでキャッシュが効かない

&lt;ul&gt;
&lt;li&gt;ファイルアクセス回数を減らすため必須&lt;/li&gt;
&lt;li&gt;全データを実機でパックするため6時間ぐらい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;頑張って並列化して5〜9時間ぐらいまで減らす

&lt;ul&gt;
&lt;li&gt;データの処理を4台で並列化

&lt;ul&gt;
&lt;li&gt;一台4時間ぐらいに短縮&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;テスト

&lt;ul&gt;
&lt;li&gt;テストフレームワークなど無い&lt;/li&gt;
&lt;li&gt;スモークテスト

&lt;ul&gt;
&lt;li&gt;特定ミッションに入れるかどうかをテスト&lt;/li&gt;
&lt;li&gt;引数で専用のミッションを始められるように

&lt;ul&gt;
&lt;li&gt;一定時間たったら終了させる&lt;/li&gt;
&lt;li&gt;正常終了しなかったらエラー&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;起動からスタート、終了までがちゃんと動くか&lt;/li&gt;
&lt;li&gt;リソースに問題ないか&lt;/li&gt;
&lt;li&gt;エフェクト再生チェック&lt;/li&gt;
&lt;li&gt;一定時間内に終わるか&lt;/li&gt;
&lt;li&gt;データが変換可能か&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;モンキーテスト

&lt;ul&gt;
&lt;li&gt;開始からエンディングまでの通しプレイAI&lt;/li&gt;
&lt;li&gt;良い感じに攻撃する

&lt;ul&gt;
&lt;li&gt;適当にボタン連打&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;適当に移動&lt;/li&gt;
&lt;li&gt;何回もゲームオーバーになったら無敵＆攻撃力１００倍&lt;/li&gt;
&lt;li&gt;メニュー操作テスト&lt;/li&gt;
&lt;li&gt;普通のUIテストっぽい&lt;/li&gt;
&lt;li&gt;長時間テスト特有のバグ発見に繋がる&lt;/li&gt;
&lt;li&gt;リソースの解放漏れ

&lt;ul&gt;
&lt;li&gt;携帯機はスリープできるので普通は電源を切らない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;問題点

&lt;ul&gt;
&lt;li&gt;作成やメンテナンスにコストがかかる&lt;/li&gt;
&lt;li&gt;ゆとりがある時期にどれだけ作れるか勝負&lt;/li&gt;
&lt;li&gt;チェックに時間かかる&lt;/li&gt;
&lt;li&gt;一日じゃ終わらない&lt;/li&gt;
&lt;li&gt;手動テストの置き換えにはならない&lt;/li&gt;
&lt;li&gt;テストのパターンが固定化されるため、外れた部分のバグは検知不可&lt;/li&gt;
&lt;li&gt;人の手のかかるテストを減らす効果&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;おばかxfdコンテスト&#34;&gt;おばかXFDコンテスト&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;人は慣れる生き物

&lt;ul&gt;
&lt;li&gt;何度も通知してるとそのうち無視するようになる

&lt;ul&gt;
&lt;li&gt;エラーメールを迷惑フォルダに入れたり&lt;/li&gt;
&lt;li&gt;パトランプの上に被せたり&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;XFDによる通知で、慣れに逆らう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;lt大会&#34;&gt;LT大会&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Jenkinsを使った継続的Webセキュリティテスト

&lt;ul&gt;
&lt;li&gt;継続的にセキュリティテストを実施するVAddyの話

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://vaddy.net/ja/&#34;&gt;http://vaddy.net/ja/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ちゃんと専門家が監修しているという噂がTLに流れた&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jenkinsおじさん、お堅いメガバンクに就職

&lt;ul&gt;
&lt;li&gt;金融系企業でJenkinsが使われているだと(´･_･`)！！&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;ちゃんと聞きたかったけど、時間が足りなくて終了…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Jenkinsおじさんと楽しい連携ツールたち

&lt;ul&gt;
&lt;li&gt;Deploygate、Slack、Gitlabの連携話
– だいたい似たようなことしてる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ゲーム業界の人がJenkinsさん3Dモデルで遊んでみた

&lt;ul&gt;
&lt;li&gt;Jenkinsの3Dモデルで遊んでる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;CI”じゃない方”のJenkins

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/MiuraKatsu/ci-43396873&#34;&gt;http://www.slideshare.net/MiuraKatsu/ci-43396873&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CI以外の使い道&lt;/li&gt;
&lt;li&gt;cronの置き換え&lt;/li&gt;
&lt;li&gt;外部ツールの連携

&lt;ul&gt;
&lt;li&gt;ピタゴラジェンキンス&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Jenkins単体の話はなくって、Jenkinsと○○連携してこう使ってますが多かった

&lt;ul&gt;
&lt;li&gt;Jenkinsを使うのは普通な世界になってる気がする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ちょこっとだけ設定を変えたJobが乱立するのはどこも同じっぽい

&lt;ul&gt;
&lt;li&gt;Workflow Pluginでそのあたりを吸収できそう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;会場設備が凄く良い

&lt;ul&gt;
&lt;li&gt;ネット快適、教室は電源とLAN完備&lt;/li&gt;
&lt;li&gt;法政大学凄すぎる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Tシャツがフリー配布されてた

&lt;ul&gt;
&lt;li&gt;太っ腹&lt;/li&gt;
&lt;li&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;ja&#34;&gt;&lt;p&gt;全てご自由にお持ちくださいらしい。 &lt;a href=&#34;https://twitter.com/hashtag/juc2015?src=hash&#34;&gt;#juc2015&lt;/a&gt; &lt;a href=&#34;http://t.co/0C4ZcEfHXg&#34;&gt;http://t.co/0C4ZcEfHXg&lt;/a&gt;&lt;/p&gt;&amp;mdash; おおた (@ota42y) &lt;a href=&#34;https://twitter.com/ota42y/status/554113306349539328&#34;&gt;2015, 1月 11&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>UNIXという考え方という本を読んだ</title>
      <link>http://ota42y.com/blog/2015/01/04/unix-boox/</link>
      <pubDate>Sun, 04 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2015/01/04/unix-boox/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/UNIX%E3%81%A8%E3%81%84%E3%81%86%E8%80%83%E3%81%88%E6%96%B9%E2%80%95%E3%81%9D%E3%81%AE%E8%A8%AD%E8%A8%88%E6%80%9D%E6%83%B3%E3%81%A8%E5%93%B2%E5%AD%A6-Mike-Gancarz/dp/4274064069&#34;&gt;UNIXという考え方&lt;/a&gt;という本を読みました。&lt;br /&gt;
原著は1994年に書かれている本で、
&lt;a href=&#34;http://ja.wikipedia.org/wiki/UNIX%E5%93%B2%E5%AD%A6&#34;&gt;UNIXの哲学&lt;/a&gt;を一つ一つ、その意味と利点について解説しています。&lt;/p&gt;

&lt;p&gt;「一つのことを、うまくやれ」や「小さいものは美しい」等、ある程度ハッカー文化に詳しい人ならばどれかは聞いたことがあるぐらい有名な哲学です。&lt;/p&gt;

&lt;p&gt;面白いのは、例えば「できるだけ早く試作を作成する」という項目では、設計を完璧にしてから取りかかるのではなく、
プロトタイプを作り、それをユーザに見せてフィードバックをもらい、良い設計にしていくべきと述べられています。&lt;br /&gt;
これはアジャイル開発のイテレーションを回していく手法ととても似ており、開発手法の歴史を感じます。&lt;/p&gt;

&lt;p&gt;また、「一つのことを、うまくやれ」は色々やる巨大な関数より、ちゃんと機能毎に分割しろと解釈できますし、「ソフトウェアの挺子（てこ）を有効に活用する」は他のいいプログラムからコードを借りてきたり、gemやnpmで既にあるソフトウェアを利用するといった、コードの再利用性の話だと解釈できます。&lt;/p&gt;

&lt;p&gt;原著は1994年に書かれたにもかかわらず、今日でも普通に通用する哲学がちりばめられており、UNIX哲学の現代のプログラミング文化への強い影響と、その普遍性をかんじます。&lt;/p&gt;

&lt;p&gt;ただ、本書の中でシェルスクリプトが移植性もいいし簡潔に書けるしと礼賛されていますが、デバッグしにくい上に、コマンドがGNUかBSDかで結果が変わる場合があるので実は移植性がそんなに無いですし、現代ではちょっとどうなのかな…みたいな部分もあります。&lt;br /&gt;
今ですと、スクリプト言語かクロスコンパイルが簡単にできるGo言語が良い選択肢でしょうか。&lt;/p&gt;

&lt;p&gt;そういった具体的な部分に関しては時代の変化で合わなくなっている部分もありますが、その哲学自体は普遍的なもので、今読んでも、おそらくは10年後に読んでも得るものが多い本だと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>大晦日ハッカソン2014&amp;正月ハッカソン2015に参加した</title>
      <link>http://ota42y.com/blog/2015/01/01/1231-hackathon/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2015/01/01/1231-hackathon/</guid>
      <description>

&lt;p&gt;2014/12/31にオンラインで行われた、&lt;br /&gt;
&lt;a href=&#34;https://atnd.org/events/59470&#34;&gt;大晦日ハッカソン2014&lt;/a&gt;に参加しました。&lt;/p&gt;

&lt;p&gt;Evernoteのリンクをアプリで直接開くChrome拡張を作りました。&lt;br /&gt;
&lt;a href=&#34;https://chrome.google.com/webstore/detail/evernote-app-opener/pjkgaadffbojkgoocbobikkklpajjbgo&#34;&gt;evernote app opener - Chrome ウェブストア&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(なお、細かい修正やこの記事の執筆等を、&lt;br /&gt;
&lt;a href=&#34;https://atnd.org/events/60889&#34;&gt;正月ハッカソン2015&lt;/a&gt;でやりました)&lt;/p&gt;

&lt;h1 id=&#34;どんなchrome拡張か&#34;&gt;どんなChrome拡張か&lt;/h1&gt;

&lt;p&gt;現在、Evernoteのノート固有のリンクを取得すると、&lt;br /&gt;
&lt;code&gt;https://www.evernote.com/shard/文字列/文字列/ユーザID/ノートID/&lt;/code&gt;&lt;br /&gt;
といった、httpsのリンクが使われます。&lt;/p&gt;

&lt;p&gt;このリンクを開くと、EvernoteのWebアプリ上でノートを開くことが出来ますが、&lt;br /&gt;
Evernoteはログインが最長で一週間しか保てず、また二段階認証をしている場合は、&lt;br /&gt;
頻繁に面倒なログインを求められます。&lt;/p&gt;

&lt;p&gt;ですが多くの場合、開こうとしているノートはオフラインのEvernoteアプリでも開くことが出来ます。&lt;br /&gt;
そのため、Webではなくアプリで開く事が出来れば、わざわざログインせずともノートを開くことが出来ます。&lt;/p&gt;

&lt;p&gt;そのため、上記のようなWebアプリでノートを開くようなリンクを、&lt;br /&gt;
オフラインのEvernoteアプリ上で同じノートを開くChrome拡張を作りました。&lt;/p&gt;

&lt;h1 id=&#34;使い方&#34;&gt;使い方&lt;/h1&gt;

&lt;p&gt;事前に、適当なノートのノートリンクを取得し、自分のユーザIDとshard名を取得する必要があります。&lt;br /&gt;
Chrome拡張のオプションページにあるように、ノートを右クリックし、ノートリンクを取得し、&lt;br /&gt;
そのURLに含まれているユーザIDとshard名をオプションページで設定してください。&lt;/p&gt;

&lt;p&gt;その状態で、Evernoteのノートリンクを開くと、ログイン/非ログインに関わらず、&lt;br /&gt;
Evernoteアプリが立ち上がり、そのノートを開いてくれます。&lt;/p&gt;

&lt;p&gt;これで、いちいちWebでログインすることなく、ノートリンクで指定したノートを表示することが出来ます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GithubのContributionsを使ってアウトプットを150日続ける</title>
      <link>http://ota42y.com/blog/2014/12/31/150-output/</link>
      <pubDate>Wed, 31 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2014/12/31/150-output/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-31-150-output.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-31-150-output.png&#34;  width=&#34;100%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;というわけで、GithubのContributionsを利用して、&lt;br /&gt;
毎日何かしらのアウトプットを150日続けるということをやりました。&lt;/p&gt;

&lt;h1 id=&#34;何故こんな事をしたのか&#34;&gt;何故こんな事をしたのか&lt;/h1&gt;

&lt;p&gt;私はまじめ系クズな上に意志薄弱なので、やった方がいいようなことでも、&lt;br /&gt;
いろんな理由をつけてやらないのがいつものことでした。&lt;/p&gt;

&lt;p&gt;特にインプットに重きを置く性質のため、いろいろなことを調べたりしますが、&lt;br /&gt;
アウトプットは何かしらの理由をつけて避けてしまう傾向があります。&lt;br /&gt;
実際、このブログにしたのは2013年9月ですが、そこから半年で1エントリのみ、&lt;br /&gt;
その後の3ヶ月も月に1回程度とほとんど書いてないに等しいです。&lt;/p&gt;

&lt;p&gt;別にそのままでも問題は無かったのですが、せっかく色々インプットしているのに、&lt;br /&gt;
定着させないのはもったいないと思い、継続的にアウトプットする方法を模索しました。&lt;/p&gt;

&lt;h1 id=&#34;継続的なアウトプットをどう実現するか&#34;&gt;継続的なアウトプットをどう実現するか&lt;/h1&gt;

&lt;p&gt;毎日継続的アウトプットを頑張る！と奮起しても、それが継続しないのが今回の問題です。&lt;br /&gt;
そのため、頑張る/頑張らないといった意思に関係なく続けられる、&lt;br /&gt;
もしくは歯磨きをせずに寝ようとした時のように、&lt;br /&gt;
継続してアウトプットしないと落ち着かないといった状態を目指します。&lt;/p&gt;

&lt;p&gt;幸いにも、私の性格には続けたことを辞めるのを凄くもったいなく感じるというものがありました。&lt;br /&gt;
大学時代には、一日一冊づつ本を読んでいて、たまたま数十日続けたところで辞めるのがもったいなくなり、&lt;br /&gt;
結局1000日ぐらい毎日本を読み続ける、みたいな事をするぐらいには、&lt;br /&gt;
ある程度続いたものを途中で辞めるのを嫌う性格です。&lt;/p&gt;

&lt;p&gt;この性質を利用し、最初のアウトプットを頑張って続けている状態から、&lt;br /&gt;
低いコストで継続してアウトプットを続けられれば、以降はそれを途中でやめるのがもったいなくなり、&lt;br /&gt;
継続的なアウトプットが出来るのではないか？と考えました。&lt;/p&gt;

&lt;p&gt;おそらくは数日かけてじっくり練ったアウトプットよりかは質が落ちますが、&lt;br /&gt;
ほとんど出ない質のいいアウトプットより、継続的に低い質のアウトプットをした方が、&lt;br /&gt;
私にとっては良い影響になると考えました。&lt;/p&gt;

&lt;h1 id=&#34;ルール設定&#34;&gt;ルール設定&lt;/h1&gt;

&lt;p&gt;数日程度なら意思の力で何とかなるため、それを低コストで継続的に行いやすく、&lt;br /&gt;
かつ続けるうちに辞めるのが勿体ないようなルール設定を作ります。&lt;/p&gt;

&lt;h2 id=&#34;1-アウトプットは外部に公開&#34;&gt;1. アウトプットは外部に公開&lt;/h2&gt;

&lt;p&gt;自分だけにしか見えないところにアウトプットすると、&lt;br /&gt;
結局なんだかんだでやらない未来が容易に想像できるため、必ず外部公開します。&lt;br /&gt;
今回みたいに定期的に続けてますエントリを書くことで、万が一検証されたら嘘がばれる…という力が働き、&lt;br /&gt;
サボったのをごまかすことがなくなると考えました。&lt;br /&gt;
(検証されるかは重要ではなく、検証される可能性があるだけでサボり抑止には十分)&lt;/p&gt;

&lt;h2 id=&#34;2-１日１コミット以上githubにpush&#34;&gt;2. １日１コミット以上Githubにpush&lt;/h2&gt;

&lt;p&gt;毎日続けた事を記録するのはとてもとても面倒です。&lt;br /&gt;
ですが、Githubなら最初の画像のように、コミットがあった場合にそれを可視化して表示してくれます。&lt;br /&gt;
そのため、アウトプットをコミットすることでGithubにpushするだけで良くなり、&lt;br /&gt;
前述の外部公開するという条件も同時に満たせるためかなり敷居が下がります。&lt;br /&gt;
特に、プログラミング関係の作業がそのまま記録できたり、ブログをOctopressにしているため、&lt;br /&gt;
新しいエントリを書くのもコミットになっているという所も大きいです。&lt;/p&gt;

&lt;h2 id=&#34;3-コミットを溜めるのは可&#34;&gt;3. コミットを溜めるのは可&lt;/h2&gt;

&lt;p&gt;風邪を引いたり、仕事が忙しいときなどはどうしても何も出来ない場合があります。&lt;br /&gt;
そんな場合に、事前にブログの記事やコミット等を溜めておき、当日は公開するだけというのもありとしました。&lt;br /&gt;
今回の最大の目的は継続的なアウトプットであり、&lt;br /&gt;
毎日アウトプットするのは私の性格を利用して継続的アウトプットを成し遂げるための手段に過ぎません。&lt;/p&gt;

&lt;p&gt;そのため、継続的なアウトプットが実現するならば、事前にそれを溜めておくのは良しとしました。&lt;br /&gt;
特にこの方法は途中で辞めるのがもったいないと感じるという所を利用して、継続的アウトプットを実現しているため、&lt;br /&gt;
一度でもそれが崩れると挽回は不可能であるためです。&lt;/p&gt;

&lt;p&gt;また、私はゲームでもHPやアイテム、リソースを十分すぎるほどため込むのが好きな正確なため、&lt;br /&gt;
何日分の溜めがあると可視化されると、十分な量の溜めを確保しようと動くだろうという予想もしていました。&lt;br /&gt;
gitだと別の日のコミットも、git rebase &amp;ndash;ignore-dateでそのときのコミットに書き換えられるため、&lt;br /&gt;
溜めを作りやすい状態でもあります。&lt;/p&gt;

&lt;h2 id=&#34;4-意味のあるコミットだけカウント&#34;&gt;4. 意味のあるコミットだけカウント&lt;/h2&gt;

&lt;p&gt;Githubだとpull-requestをマージするだけで1コミットが作られるため、ボタンを押すだけで1日分稼げてしまいます。&lt;br /&gt;
ですが、これは当初の継続的なアウトプットには繋がらないため、&lt;br /&gt;
最低限意味のあるコミットを行うのをルールとしました。&lt;/p&gt;

&lt;p&gt;ただし、今回の目的は定期的なアウトプットであるため、アウトプットの質自体は考慮せず、&lt;br /&gt;
どんなに小さくてもバグ修正や、関数単位では出来ているものは1コミットとして考えるようにしました。&lt;br /&gt;
無意味なコミットは禁止するが、あまり価値のないコミットでも許可するといった具合です。&lt;/p&gt;

&lt;h1 id=&#34;150日続けた結果&#34;&gt;150日続けた結果&lt;/h1&gt;

&lt;h2 id=&#34;利点&#34;&gt;利点&lt;/h2&gt;

&lt;p&gt;誰かが「何かをやめる最良の方法は、別の何かを始めることだ」と言っていましたが、まさにそれを感じでいます。&lt;br /&gt;
一日の時間は限られているため、この継続的にアウトプットすることより優先度が低いものは後回しになり、&lt;br /&gt;
惰性で続けていただけの事は自然と後回し、辞めていきました。&lt;br /&gt;
どうしても続けたいような事の場合、その作業にかかる時間を削ろうと、&lt;br /&gt;
作業の補助をするプログラムを作ったりするようにもなりました。&lt;/p&gt;

&lt;p&gt;また、溜めはあればあるほど安心できるため、暇なときはすぐに何かまとめられるネタが無いか、&lt;br /&gt;
新しいパッケージにするようなことが無いかを考えるようになり、いろいろな技術などに手を出すようになりました。&lt;br /&gt;
特に、何となく理解しているが検証していないことに対して検証するようになり、&lt;br /&gt;
正確な知識を作れている…きがします。&lt;/p&gt;

&lt;h2 id=&#34;問題点&#34;&gt;問題点&lt;/h2&gt;

&lt;h3 id=&#34;外に出せない作業をやらなくなる&#34;&gt;外に出せない作業をやらなくなる&lt;/h3&gt;

&lt;p&gt;部屋の片付けや不要なものの整理、サイトのクローリングなど、公開出来ない作業をしにくくなります。&lt;br /&gt;
前者に関しては生活に支障がでるとさすがにやらざるを得ないため問題がありませんが、&lt;br /&gt;
後者は毎日やってるのを自動化したら楽になるが、公開できないので手をつけ辛いといった問題があります。&lt;/p&gt;

&lt;p&gt;これに関しては溜めを作ることである程度時間のコントロールが可能になり、&lt;br /&gt;
「自動化すれば日々の作業量が減って毎日楽になるし、溜めを数日分使ってでもやる」&lt;br /&gt;
という事が出来るようになったため、だいぶ解決しました。&lt;/p&gt;

&lt;h3 id=&#34;細かく終わる作業ばかり選ぶようになる&#34;&gt;細かく終わる作業ばかり選ぶようになる&lt;/h3&gt;

&lt;p&gt;数日かけてやる作業や、まとめにくい作業（コードリーディングとか）が出来なくなってしまいます。&lt;br /&gt;
これは、時間をかけてもせいぜい1コミット程度にしかならず、&lt;br /&gt;
細かい作業でコミット量を増やした方が溜をたくさん作れるため、&lt;br /&gt;
このルール下ではそちらの方が合理的な選択になってしまうのが原因です。&lt;/p&gt;

&lt;p&gt;実際、アドベントカレンダーで書いたラブライブ関連の記事は2ヶ月ぐらい少しずつ作っていましたが、&lt;br /&gt;
最終的には3日分のコミットにしかなっていません。&lt;br /&gt;
作業を選べばおそらく同じ時間で10倍ぐらいのコミットが稼げてしまうため、費用対効果がかなり薄いです。&lt;/p&gt;

&lt;p&gt;今回の目的は定期的にアウトプットすることであり、たくさんの小粒のコミットを生み出すこと自体は問題ありません。&lt;br /&gt;
ですが、同じ状態を維持できるなら、アウトプットの質は上げたほうが望ましいです。&lt;br /&gt;
一応溜めがあれば、それを消費して数日かかる長い作業も出来ますが、&lt;br /&gt;
費用対効果が悪いために手を出しにくいという問題は解決していません。&lt;br /&gt;
ここについては今後、ブログに途中作業を書くのは良しとするなどのルールを加えて解決していこうかと思います。&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;p&gt;世の中にはこんな面倒な決め事をしなくても、価値のある行動を延々と続けられる凄い人もいますが、&lt;br /&gt;
私みたいなまじめ系クズ＋意志薄弱でも、その性格を分析して適切なルールを敷いて行動することで、&lt;br /&gt;
少なくとも三日坊主にならずに物事を続けられるぐらいには持って行くことが出来ます。&lt;/p&gt;

&lt;p&gt;このルールは、継続している状態を辞めてしまうのは勿体ないという、&lt;br /&gt;
私の性格や思考に完全に合うように作っているため、他の人の場合は全く違うルールが必要です。&lt;/p&gt;

&lt;p&gt;そのため、はてなブックマークのブックマーク数が増えることや、テキストファイルのバイト数が増えること、&lt;br /&gt;
自分の友人の反応など、そういったことがいいと感じる人は、&lt;br /&gt;
それを継続のベースにしたルールを作る必要があります。&lt;/p&gt;

&lt;p&gt;ルールの作成は大変ですが、その人にあったルールを作ることで、&lt;br /&gt;
同じように何かを継続したり、もっと凄いことも出来るようになる…と思います。&lt;/p&gt;

&lt;p&gt;ただ、私の感覚として、できる限り頑張るといった意思の力に頼る事は避けた方がいいと思います。&lt;br /&gt;
やる気は容易に無くなるため、やる気が無い状態でもいかに継続するかについては、&lt;br /&gt;
ルールに上手く含めておいた方がいいと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pixivのタグから読み解くラブライブイラスト投稿者分析</title>
      <link>http://ota42y.com/blog/2014/12/27/lovelive-age/</link>
      <pubDate>Sat, 27 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2014/12/27/lovelive-age/</guid>
      <description>

&lt;p&gt;&lt;em&gt;この記事は2014年版で、2015年をまとめた版があります&lt;br /&gt;
(&lt;a href=&#34;http://ota42y.com/blog/2016/01/22/lovelive-pixiv-illust-2015/&#34;&gt;2015年のpixiv内ラブライブイラストの推移&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/blog/2014/12/26/lovelive-cp/&#34;&gt;昨日&lt;/a&gt;、&lt;a href=&#34;http://ota42y.com/blog/2014/12/25/lovelive/&#34;&gt;一昨日&lt;/a&gt;とラブライブイラストについて見ていきましたが、&lt;br /&gt;
最後にイラストを投稿している投稿者さんについて見ていきます。&lt;/p&gt;

&lt;h1 id=&#34;投稿者の性別傾向&#34;&gt;投稿者の性別傾向&lt;/h1&gt;

&lt;h2 id=&#34;集計方法&#34;&gt;集計方法&lt;/h2&gt;

&lt;p&gt;キャラのイラストと、ラブライブ関連イラストを投稿した人全員に対して、性別と年齢を調べてまとめました。&lt;br /&gt;
なお、各データはユーザページで公開されているものを利用したため、&lt;br /&gt;
全体に情報を公開している人のみの集計になります。&lt;/p&gt;

&lt;h2 id=&#34;各キャラ毎の性別傾向&#34;&gt;各キャラ毎の性別傾向&lt;/h2&gt;

&lt;p&gt;各キャラ毎に、男性と女生徒でどれくらいの割合で投稿しているかを集計しました。&lt;br /&gt;
なお、キャラ毎に投稿数ユーザ数がそもそも違うため、&lt;br /&gt;
そのキャラに投稿した人のうち性別が判別できるユーザがどれくらいの割合なのかを集計しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-27-lovelive_chara_user.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-27-lovelive_chara_user.png&#34;  width=&#34;100%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ラブライブタグ全体では女性投稿者の方が多い結果になりました。&lt;/p&gt;

&lt;p&gt;キャラ毎では、男性投稿者が多いキャラが５人に、女性投稿者が多いキャラ人気が４人と、&lt;br /&gt;
μ&amp;rsquo;sメンバーの中でも男女のユーザ数が半分に別れています。&lt;/p&gt;

&lt;p&gt;特に男性からの投稿が多いのは高坂穂乃果、園田海未の二名です。&lt;br /&gt;
女性からの投稿が特に多いのは、南ことり、矢澤にこの二名になります。&lt;br /&gt;
また、星空凛は男女共にほぼ同数の投稿人数になります。&lt;/p&gt;

&lt;p&gt;なお、昨日の記事でも紹介した、閲覧数の多いカップリングである、&lt;br /&gt;
「にこまき」「のぞえり」「ことうみ」「りんぱな」ですが、&lt;br /&gt;
カップリングの片方ずつで男性投稿者と女性投稿者の投稿数が割れています。&lt;br /&gt;
男性女性、それぞれから支持を得るキャラ同士のカップリングだから人気だったりするのでしょうか？&lt;/p&gt;

&lt;h2 id=&#34;カップリング毎の性別傾向&#34;&gt;カップリング毎の性別傾向&lt;/h2&gt;

&lt;p&gt;前回の記事で集計した総閲覧数1,000,000以上のカップリングに対して、&lt;br /&gt;
性別ごとに投稿者の割合を集計しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-27-lovelive_cp_user.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-27-lovelive_cp_user.png&#34;  width=&#34;100%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;人気のカップリングでは女性投稿者が多いことがわかります。&lt;br /&gt;
また、キャラごとの傾向では片方が6割を超えることはありませんでしたが、&lt;br /&gt;
カップリングごとでは6割超えが多く見られ、かなり偏りがあります。&lt;/p&gt;

&lt;p&gt;なお、キャラ別に比べて有効なユーザ数が少ないため、&lt;br /&gt;
必ずしも正確な調査ではない部分にご注意ください。&lt;/p&gt;

&lt;h1 id=&#34;ラブライブ投稿者の年齢層&#34;&gt;ラブライブ投稿者の年齢層&lt;/h1&gt;

&lt;h2 id=&#34;集計方法-1&#34;&gt;集計方法&lt;/h2&gt;

&lt;p&gt;ラブライブのイラストを投稿した全ユーザから、年齢を公開しているユーザを集計しました。&lt;br /&gt;
各キャラ毎に年齢別にユーザ数を出していましたが、&lt;br /&gt;
ほぼ全キャラ同じ傾向になったため、ラブライブイラスト全体で出すことにします。&lt;/p&gt;

&lt;h2 id=&#34;集計結果&#34;&gt;集計結果&lt;/h2&gt;

&lt;p&gt;有効なデータ数は男性3665、女性2771、性別不明765の7201件でした。&lt;br /&gt;
なお、10才から5才区切りで集計しています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-27-lovelive_user_age.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-27-lovelive_user_age.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;20〜25才未満が最も投稿している結果になりました。&lt;/p&gt;

&lt;p&gt;そこから+-5才が二番目に多いすが、25才以上は男性がほとんどなのに対し、&lt;br /&gt;
20才未満は女性が多くを占めています。&lt;br /&gt;
そのため、20代男性と、15〜25才の女性投稿者が多いようです。&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;ラブライブイラスト全体では女性投稿者の方が多い

&lt;ul&gt;
&lt;li&gt;キャラ毎では、男性の投稿者に人気、女性の投稿者に人気がわかれている&lt;/li&gt;
&lt;li&gt;人気の4カップリングは、男性人気+女性人気の組み合わせキャラだった&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;カップリングイラスト投稿者は女性投稿者の方が多い

&lt;ul&gt;
&lt;li&gt;投稿者の男女別人気も、キャラのそれよりも偏りが大きい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;投稿者は男女で若干世代が違う

&lt;ul&gt;
&lt;li&gt;女性は15〜25才、男性は20〜30才&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;最も投稿が多いユーザは一人で250件以上投稿していた

&lt;ul&gt;
&lt;li&gt;そのほぼ半分に西木野真姫タグがついており、同キャラの最多投稿ユーザ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>pixivのタグから読み解くラブライブカップリング傾向(2014年11月現在)</title>
      <link>http://ota42y.com/blog/2014/12/26/lovelive-cp/</link>
      <pubDate>Fri, 26 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2014/12/26/lovelive-cp/</guid>
      <description>

&lt;p&gt;&lt;em&gt;この記事は2014年版で、2015年をまとめた版があります&lt;br /&gt;
(&lt;a href=&#34;http://ota42y.com/blog/2016/01/22/lovelive-pixiv-illust-2015/&#34;&gt;2015年のpixiv内ラブライブイラストの推移&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/blog/2014/12/25/lovelive/&#34;&gt;昨日&lt;/a&gt;はラブライブタグ全体と、各キャラについて見ていきましたが、&lt;br /&gt;
今日はカップリングについて見ていきます。&lt;/p&gt;

&lt;p&gt;なお、既に調べられていたので、半分ぐらいはその内容のアップデートになります。&lt;br /&gt;
&lt;a href=&#34;http://iwiwi.hatenadiary.jp/entry/2014/06/28/003736&#34;&gt;pixiv のタグ情報を用いた「ラブライブ！ School idol project」のカップリングネットワークの構築&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;収集方法&#34;&gt;収集方法&lt;/h1&gt;

&lt;p&gt;pixivのタグから、各カップリングタグ（「にこまき」、「のぞえり」等）とラブライブタグがついているものを収集し、
そのイラストの閲覧数の和を集計しました。&lt;/p&gt;

&lt;p&gt;条件にラブライブタグを含めないと、高坂雪穂と星空凛の「ゆきりん」タグで別のゆきりんが引っかかる等、&lt;br /&gt;
ラブライブとは関係のないものも含まれてしまうため、このような条件にしています。&lt;/p&gt;

&lt;p&gt;また、「まきりんぱな」や「ことほのうみ」といった３人を含むタグについては、&lt;br /&gt;
「まきりん」と「りんぱな」として集計することはせず、結果から除外しています。&lt;/p&gt;

&lt;p&gt;なお、元となったエントリの詳しい収集方法がわからないため、&lt;br /&gt;
単純な数値比較は出来ませんのでご注意ください。&lt;/p&gt;

&lt;h1 id=&#34;順番を加味しない場合&#34;&gt;順番を加味しない場合&lt;/h1&gt;

&lt;p&gt;「にこまき」と「まきにこ」を同一視する場合です。&lt;/p&gt;

&lt;h2 id=&#34;収集結果&#34;&gt;収集結果&lt;/h2&gt;

&lt;p&gt;(クリックで大きく見られます)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_cp.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_cp.png&#34;  width=&#34;100%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;にこまきの人気は相変わらず圧倒的です
時点がのぞえりなのも前回から変わりません。&lt;br /&gt;
ですが、３番目のことうみが、前回よりも他を大きく引き離してきています。&lt;/p&gt;

&lt;p&gt;また、つばほのがマイナーカップリングを凌ぐほどの人気になっていたり、&lt;br /&gt;
ゆきありが地味に伸びていたりと、メインキャラ以外の部分にも多少変化があります。&lt;/p&gt;

&lt;h2 id=&#34;グラフ&#34;&gt;グラフ&lt;/h2&gt;

&lt;h3 id=&#34;1-000-000以上のみ&#34;&gt;1,000,000以上のみ&lt;/h3&gt;

&lt;p&gt;元記事に習い、1,000,000未満の辺がﾐﾄﾒﾗﾚﾅｲ場合、組み合わせはこのようなグラフになります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_1000000.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_1000000.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;前回は生徒会グループと、広義の一年生グループとに別れていましたが、&lt;br /&gt;
ほのまきとのぞにこの人気が上がったことにより、全てが繋がりました。&lt;/p&gt;

&lt;p&gt;また、高坂穂乃果は4種類のカップリングがあり、最もカップリングの種類が多いキャラになっています。&lt;/p&gt;

&lt;h3 id=&#34;100-000以上のみ&#34;&gt;100,000以上のみ&lt;/h3&gt;

&lt;p&gt;100,000未満の辺がﾐﾄﾒﾗﾚﾅｲ場合は以下のようなグラフになります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_100000.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_100000.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;西木野真姫、絢瀬絵里、高坂穂乃果に線が集中し、りんぱなにはそれほど線がありません。&lt;br /&gt;
また、高坂雪穂と絢瀬亜里沙はどちらも実の姉とは繋がっていないのがわかります。&lt;/p&gt;

&lt;p&gt;最もカップリングが多いのは、μ&amp;rsquo;sメンバー全員と繋がっている西木野真姫と、&lt;br /&gt;
8人＋綺羅ツバサと繋がっている高坂穂乃果になります。&lt;/p&gt;

&lt;h1 id=&#34;順番を加味する場合&#34;&gt;順番を加味する場合&lt;/h1&gt;

&lt;p&gt;「にこまき」と「まきにこ」を別物として数えます。&lt;/p&gt;

&lt;h2 id=&#34;集計結果&#34;&gt;集計結果&lt;/h2&gt;

&lt;p&gt;行＋列のカップリングスコアになります。&lt;br /&gt;
(クリックで大きく見られます)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_cp_dict.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_cp_dict.png&#34;  width=&#34;100%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;複数のイラストを含んだ投稿などで、「のぞえり」と「えりのぞ」が両方つけられるような場合があり、&lt;br /&gt;
前述の順番を加味しない場合と、順番を加味した場合の和は異なっています。&lt;/p&gt;

&lt;p&gt;基本的には「のぞにこ」と「ほのまき」が増えた以外は前の結果とほぼ変わりませんでした。&lt;/p&gt;

&lt;p&gt;なお、前回の結果と比べて「まきりん」が減少していますが、&lt;br /&gt;
不審に思って調べたところ、「まきりん」タグ自体の登録数は少なく、&lt;br /&gt;
そもそも前回の結果のような大きい値になることは考えにくいです。&lt;/p&gt;

&lt;p&gt;一方で、タグを完全一致ではなく部分一致にし、「まきりん」の集計に「まきりんぱな」も入れると、&lt;br /&gt;
似たような大きな値になるため、おそらくはこれが原因だと思われます。&lt;/p&gt;

&lt;h2 id=&#34;グラフ-1&#34;&gt;グラフ&lt;/h2&gt;

&lt;p&gt;1,000,000未満の辺がﾐﾄﾒﾗﾚﾅｲ場合、グラフは以下のようになります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_1000000_dict.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-26-lovelive_1000000_dict.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;南ことり、星空凛は常に先に来ているのに対し、西木野真姫、園田海未は誰が相手でも常に後に来ています。&lt;/p&gt;

&lt;p&gt;また、「のぞえり」と「えりのぞ」だけがお互いに辺を作っています。&lt;br /&gt;
一番人気の「にこまき」の方向がほぼ固定なのと比較すると、かなり特徴的です。&lt;/p&gt;

&lt;p&gt;なお、これ以下の閾値やR-18作品の結果などは前回と大きな変化が見られなかったため、省略します。&lt;/p&gt;

&lt;h1 id=&#34;カップリングイラスト投稿数推移&#34;&gt;カップリングイラスト投稿数推移&lt;/h1&gt;

&lt;p&gt;カップリングは全部で72通りあるため、投稿数1,000,000以上のカップリングのアニメ化後の推移をまとめました。&lt;br /&gt;
なお、月ごとの投稿数で調べたところあまりにも乱高下が激しく、わかりづらいグラフだったため、&lt;br /&gt;
月ごとの累計投稿数で集計を行いました。&lt;/p&gt;

&lt;h2 id=&#34;投稿数1-000-000以上&#34;&gt;投稿数1,000,000以上&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-26-cp_all.png&#34; alt=&#34;投稿数1,000,000以上のカップリングの推移&#34; /&gt;&lt;/p&gt;

&lt;p&gt;一期放映直後から、にこまきの投稿数が圧倒的であることがわかります。&lt;br /&gt;
また、量が多いのでわかりにくいですが、&lt;br /&gt;
二期第２話「優勝をめざして」の直後あたりに投稿数が一気に伸びていました。&lt;/p&gt;

&lt;p&gt;のぞえりは二期になってから一気に伸びています。&lt;br /&gt;
詳しく調べたところ、アニメ放映直後からしばらくの間はりんぱなやほのえりとほぼ同じ程度の投稿数でしたが、&lt;br /&gt;
二月のライブ以降投稿数が増加していき、&lt;br /&gt;
５月末の第８話「私の望み」から東條希の誕生日(&lt;sup&gt;6&lt;/sup&gt;&amp;frasl;&lt;sub&gt;9&lt;/sub&gt;)周辺で一気に増加しました。&lt;/p&gt;

&lt;h2 id=&#34;上位２組以外&#34;&gt;上位２組以外&lt;/h2&gt;

&lt;p&gt;にこまき、のぞえりが多すぎるため、この二つを取り除いたグラフも用意しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-26-cp_without.png&#34; alt=&#34;にこまきとのぞえり以外のカップリングの推移&#34; /&gt;&lt;/p&gt;

&lt;p&gt;りんぱな、ほのえりは一期の頃から投稿数が多かったでしたが、&lt;br /&gt;
りんぱなが二期も同じぐらい押されて、増加ペースを伸ばしたのに対し、&lt;br /&gt;
ほのえりは二期ではそれほど押されていなかったためか、増加ペースは変わっていません。&lt;/p&gt;

&lt;p&gt;対してことうみ、えりうみは二期が始まってから増加ペースが伸びていきました。&lt;br /&gt;
特にことうみは５月頭のコミティアから５月中頃の僕らのラブライブ４にかけて、一気に投稿数が増加していました。&lt;/p&gt;

&lt;p&gt;また、上記の総閲覧数ではりんぱなよりことうみの方が多いのですが、&lt;br /&gt;
イラストの投稿数自体はりんぱなの方が量が多いです。&lt;br /&gt;
詳しく調べたところ、最も閲覧数の多いイラストもりんぱなの方が１万ぐらい多いのですが、&lt;br /&gt;
中央値等はことうみのほうが２倍ぐらい大きくなっていました。&lt;br /&gt;
あまりデータ分析方法は知らないため、この逆転現象の原因を探るのは難しそうです…&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;にこまきの人気凄い

&lt;ul&gt;
&lt;li&gt;のぞえり、ことうみ、りんぱなの人気が続く&lt;/li&gt;
&lt;li&gt;(・8・)ﾎﾉｶﾁｬﾝ…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ただし、投稿数1,000,000以上のカップリングに一番出てくるのは高坂穂乃果

&lt;ul&gt;
&lt;li&gt;⊂(・8・)⊃＜ﾎﾉｶﾁｬｧｧｧﾝ!&lt;/li&gt;
&lt;li&gt;ほのこと、ほのうみ、ほのまき、ほのえりの４つ&lt;/li&gt;
&lt;li&gt;時点は西木野真姫と園田海未、綾瀬絵里&lt;/li&gt;
&lt;li&gt;にこまき、ほのまき、りんまき&lt;/li&gt;
&lt;li&gt;ことうみ、えりうみ、ほのうみ&lt;/li&gt;
&lt;li&gt;のぞえり、ほのえり、えりうみ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;キャラ個別と同じく、アニメでフォーカスが当たると投稿数が伸びる&lt;/li&gt;
&lt;li&gt;投稿数が多い≠閲覧数が多い

&lt;ul&gt;
&lt;li&gt;ものすごい人気の作品があるわけではない&lt;/li&gt;
&lt;li&gt;絵師さん人気よりも非絵師さん人気があるとか？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;次回予告&#34;&gt;次回予告&lt;/h1&gt;

&lt;p&gt;次回はラブライブイラストを描いている投稿者の分析をしようと思います。&lt;br /&gt;
&lt;a href=&#34;http://ota42y.com/blog/2014/12/27/lovelive-age/&#34;&gt;pixivのタグから読み解くラブライブイラスト投稿者分析&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pixivのタグから読み解くラブライブイラストの歩み</title>
      <link>http://ota42y.com/blog/2014/12/25/lovelive/</link>
      <pubDate>Thu, 25 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2014/12/25/lovelive/</guid>
      <description>

&lt;p&gt;&lt;em&gt;この記事は2014年版で、2015年をまとめた版があります&lt;br /&gt;
(&lt;a href=&#34;http://ota42y.com/blog/2016/01/22/lovelive-pixiv-illust-2015/&#34;&gt;2015年のpixiv内ラブライブイラストの推移&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;⊂(・8・)⊃＜776O776J7722776B772s772n772n772n776dIQ==&lt;/p&gt;

&lt;p&gt;さて、&lt;a href=&#34;http://www.adventar.org/calendars/398&#34;&gt;ラブライブ！ Advent Calendar 2014&lt;/a&gt;最終日は、&lt;br /&gt;
pixiv上のラブライブのイラストについて見ていこうと思います。&lt;/p&gt;

&lt;p&gt;内容としては以下になります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pixiv上のラブライブイラストの推移(本記事)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ota42y.com/blog/2014/12/26/lovelive-cp/&#34;&gt;pixivのタグから読み解くラブライブカップリング傾向&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ota42y.com/blog/2014/12/27/lovelive-age/&#34;&gt;pixivのタグから読み解くラブライブイラスト投稿者分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なお、一つの記事にするには長すぎたため、&lt;br /&gt;
3記事に分割しています。&lt;/p&gt;

&lt;p&gt;今日はpixiv上のラブライブイラストの推移について書いていきます。&lt;/p&gt;

&lt;h1 id=&#34;集計方法&#34;&gt;集計方法&lt;/h1&gt;

&lt;p&gt;各キャラ毎のイラストに関しては、そのキャラの本名、&lt;br /&gt;
もしくは別名+ラブライブタグがついたイラストを集計しています。&lt;br /&gt;
(ことりちゃんや凛ちゃん、のんたん等、ラブライブ以外の同名タグを含めないため)&lt;/p&gt;

&lt;p&gt;ラブライブ！タグとしては、ラブライブ！およびLoveLive!といった作品名のタグのついたイラストと、&lt;br /&gt;
各登場人物のイラストを重複排除して集計しました。&lt;br /&gt;
（ラブライブ！タグのついてないキャラのイラストもあるため）&lt;/p&gt;

&lt;p&gt;集計期間は、ラブライブイラストが初めて投稿された2010年8月〜2014年11月になります。&lt;/p&gt;

&lt;h1 id=&#34;年間イラスト数の推移&#34;&gt;年間イラスト数の推移&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_01.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_01.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一期放送の2013年に投稿数が増えた後、二期放送の2014年でさらに4倍近くイラスト数が伸びています。&lt;/p&gt;

&lt;p&gt;ご覧の通り、アニメ化以前と以後とでは、投稿数が100倍ぐらい差があるため、&lt;br /&gt;
ここから先はアニメ化以前とアニメ化以後、およびキャラ毎の3種類に分けて見ていきます。&lt;/p&gt;

&lt;h1 id=&#34;アニメ化以前の月刊イラスト投稿数&#34;&gt;アニメ化以前の月刊イラスト投稿数&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_02.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_02.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;各シングル発売のたびにイラストが増加しています。&lt;/p&gt;

&lt;p&gt;1stシングル発売後は一度投稿数が落ち込みましたが、&lt;br /&gt;
2ndシングル「Snow halation」が発売してからは安定した投稿数を確保しています。&lt;br /&gt;
その後も、3rd、4thと着実に投稿数が伸びています。&lt;/p&gt;

&lt;p&gt;4thシングル&amp;amp;1stライブ&amp;amp;アニメ化発表の時の盛り上がりが凄いですが、&lt;br /&gt;
同時に3月まで5thシングルの総選挙があったため、3月の投票数も伸びています。&lt;/p&gt;

&lt;p&gt;なお、この月の誕生日の園田海未を除くと、&lt;br /&gt;
南ことり、矢澤にこ、西木野真姫の3人が他のキャラと比べて増加していましたが、&lt;br /&gt;
総選挙の上位三人になっており、データ数が少ないので偶然かもしれませんが、ちゃんと対応が取れていました。&lt;/p&gt;

&lt;p&gt;ちなみに、5thシングル前の7月にも山が見られますが、調べたところにこの聖誕祭効果でした。&lt;/p&gt;

&lt;h1 id=&#34;アニメ化以降の月刊イラスト投稿数&#34;&gt;アニメ化以降の月刊イラスト投稿数&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_03.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_03.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;アニメ化以前は月間投稿数が100を超えることはありませんでしたが、&lt;br /&gt;
アニメ化以降一気に投稿数が伸び、放送終了後以降は月刊投稿数が1000を切ることがないぐらいにまで成長しました。&lt;/p&gt;

&lt;p&gt;投稿数の増加は夏コミまで続きますが、夏コミ(C84)が終わった後はいったん沈静化します。&lt;br /&gt;
ですが、12月の冬コミ(C85)と3rdのDVD/BD発売から再び火がつき、&lt;br /&gt;
2月のライブにかけて再びイラスト数が増加していきます。&lt;/p&gt;

&lt;p&gt;特に、ライブ直後の二週間だけで投稿数が2000を超すなど、二期を直前にして盛り上がりは最高潮に達しています。&lt;/p&gt;

&lt;p&gt;二期が放映されてからは一期以上のペースで伸びていき、&lt;br /&gt;
一期と同じく夏コミ(C86)まで増加して一度沈静化しました。&lt;/p&gt;

&lt;p&gt;今月は冬コミ(C87)が控えているため、おそらくそれによってまた増加すると思われます。&lt;/p&gt;

&lt;h1 id=&#34;学年ごとの集計&#34;&gt;学年ごとの集計&lt;/h1&gt;

&lt;p&gt;一週間筒キャラ毎にまとめたのを用意したので、もう少し細かく見ていくことにします。&lt;/p&gt;

&lt;p&gt;なお、各キャラ共に誕生日とその次の日にかけて、聖誕祭イラストとして投稿数が増加します。&lt;br /&gt;
そのため、キャラの誕生日と次の日を別の週として集計すると、実態と集計結果がずれてしまいます。&lt;/p&gt;

&lt;p&gt;幸いなことに、投稿数が増えた2013年〜2014年の間で水曜日が誕生日のキャラはいないため、&lt;br /&gt;
木曜〜水曜の一週間で集計し、誕生日と次の日が分割されることを回避しています。&lt;/p&gt;

&lt;h2 id=&#34;1年生&#34;&gt;1年生&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_04.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_04.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これは全てのキャラに言えることですが、各キャラの誕生日ごとにスパイクが発生し、&lt;br /&gt;
イラスト数が増加しているのがわかります。&lt;br /&gt;
また、こちらも各キャラ共通ですが、4thライブ直後にもイラスト数が増加しています。&lt;/p&gt;

&lt;p&gt;キャラとしては、アニメ化前からちょくちょく人気でしたが、やはり西木野真姫の投稿数は安定しています。&lt;br /&gt;
また、2013年はイラスト数が少なかったため、矢澤にこの聖誕祭でにこまきカップリングとして、&lt;br /&gt;
投稿数が伸びていました。
なお、2014年はイラスト数が増えたため、相対的に影響が小さくなっています。&lt;/p&gt;

&lt;p&gt;2014年の西木野真姫の誕生日に隠れていますが、&lt;br /&gt;
二期の第５話「新しい私」直後から、星空凛の投稿数が上がっています。&lt;/p&gt;

&lt;p&gt;小泉花陽はアニメ二期後の誕生日が来月のため、そちらのデータに期待です。&lt;/p&gt;

&lt;h2 id=&#34;2年生&#34;&gt;2年生&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_05.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_05.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;アニメ化以前から人気だった南ことりの投稿数は多いですが、&lt;br /&gt;
二期以前は他の二人も同じぐらいの投稿数があり、それほど差がついてはいませんでした。&lt;/p&gt;

&lt;p&gt;なお、2014年の南ことりの誕生祭は、今のところ全キャラ中トップの投稿数になります。&lt;/p&gt;

&lt;p&gt;高坂穂乃果聖誕祭の陰に隠れていますが、海の日に園田海未のイラスト投稿数が増加しています。&lt;br /&gt;
彼女も小泉花陽と同じく、アニメ二期後の誕生日がまだですので（３月）そちらのデータに期待です。&lt;/p&gt;

&lt;h2 id=&#34;3年生&#34;&gt;3年生&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_06.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_06.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;やはりアニメ化前からの人気キャラの矢澤にこの投稿数は凄いです。&lt;br /&gt;
ですが元から人気があったため、二期第４話の「宇宙ナンバーワンアイドル」の影響はそんなに見られませんでした。&lt;/p&gt;

&lt;p&gt;一方で東條希は二期第８話「私の望み」とその直後の誕生祭で一気に投稿数が上がっています。&lt;br /&gt;
絢瀬絵里はお当番回が一期８話だったこともあり、二期以降で目立った変化はありませんでした。&lt;/p&gt;

&lt;h2 id=&#34;a-raiseとゆきあり&#34;&gt;A-RAISEとゆきあり&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_07.png&#34;&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-25-lovelive_07.png&#34;  width=&#34;70%&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;メインキャラではないため、やはりイラストの数が全然違います。&lt;/p&gt;

&lt;p&gt;高坂雪穂や絢瀬亜里沙は一期後もぽつぽつと投稿が見られました。&lt;/p&gt;

&lt;p&gt;A-RISEもほぼ同じ状況でしたが、やはり二期第３話で「ユメノトビラ」ライブをしてから、&lt;br /&gt;
一気に投稿数が上昇しています。&lt;br /&gt;
その後の最終予選でももう一度盛り上がりを見せ、以降は少しずつ投稿が行われています。&lt;/p&gt;

&lt;p&gt;なお、２０１４年９月頃にまた投稿数が上がっていますが、&lt;br /&gt;
同人誌即売会の僕らのラブライブ５（聖地の秋葉原UTXで開催）の影響でした。&lt;br /&gt;
データ数がそれほど多くないため、同人イベントによる増加が大きく出ているようです。&lt;br /&gt;
（一応、矢澤にこや西木野真姫のグラフにも若干影響が出ています）&lt;/p&gt;

&lt;p&gt;なお、神モブであるヒフミトリオに関しては、同名キャラが引っかかりノイズも多く、&lt;br /&gt;
有効なデータ数が少なすぎるため集計していません。&lt;br /&gt;
せめてフルネームがあればいいのですが…&lt;/p&gt;

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;アニメ化以後の投稿数の上がり方は凄い

&lt;ul&gt;
&lt;li&gt;一期でも増えたが、二期になってさらに増えている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;何かしらのイベントがあると投稿数が伸びる

&lt;ul&gt;
&lt;li&gt;ライブ、コミケ等&lt;/li&gt;
&lt;li&gt;特に聖誕祭の効果はすさまじい&lt;/li&gt;
&lt;li&gt;どのキャラも、二期の聖誕祭は一期に比べて四倍以上増えてる&lt;/li&gt;
&lt;li&gt;4thライブの影響は大きかった&lt;/li&gt;
&lt;li&gt;4thライブ後でどのキャラも投稿数が上がり、そのまま二期に入っている。&lt;/li&gt;
&lt;li&gt;アニメ化前の盛り上げ方としてかなり効果がある結果になっている（イラスト投稿数的には）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;キャラのトレンドは大きく分けて三つ

&lt;ul&gt;
&lt;li&gt;前から人気の真姫、ことり、にこ&lt;/li&gt;
&lt;li&gt;二期で大きく伸びた凛、希&lt;/li&gt;
&lt;li&gt;大きな変化がない花陽、穂乃果、海未、絵里&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;実感として特別不人気のキャラはいないと思っていたが、実際いなかった&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なお、今月末には冬コミが、1/31〜2/1にはライブがあるので、どう変化するかが楽しみです。&lt;/p&gt;

&lt;h1 id=&#34;次回予告&#34;&gt;次回予告&lt;/h1&gt;

&lt;p&gt;明日はカップリングについて現状と、その推移を調べていきます。&lt;br /&gt;
&lt;a href=&#34;http://ota42y.com/blog/2014/12/26/lovelive-cp/&#34;&gt;pixivのタグから読み解くラブライブカップリング傾向(2014年11月現在)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>