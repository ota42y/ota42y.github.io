<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graphviz on おおたの物置</title>
    <link>http://ota42y.com/tags/graphviz/index.xml</link>
    <description>Recent content in Graphviz on おおたの物置</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <atom:link href="http://ota42y.com/tags/graphviz/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Graphvizを使うと、グラフ描画がとても楽になる</title>
      <link>http://ota42y.com/blog/2014/12/22/graphviz/</link>
      <pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2014/12/22/graphviz/</guid>
      <description>

&lt;p&gt;こんな感じの画像を作る際に&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-12-22-grahviz.png&#34; alt=&#34;グラフ&#34; /&gt;&lt;/p&gt;

&lt;p&gt;これまではパワポの図形機能とかペイントで頑張って作っていましたが、&lt;br /&gt;
Graphvizを使うと自動で出力できます。&lt;/p&gt;

&lt;h2 id=&#34;graphvizとは&#34;&gt;Graphvizとは&lt;/h2&gt;

&lt;p&gt;AT&amp;amp;Tが作ったグラフ描画のツールパッケージです。&lt;br /&gt;
&lt;a href=&#34;http://ja.wikipedia.org/wiki/Graphviz&#34;&gt;http://ja.wikipedia.org/wiki/Graphviz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DOT言語というグラフ記述言語で記述されたグラフを、画像ファイル等に変換することができます。&lt;/p&gt;

&lt;p&gt;グラフのレイアウト等はGraphviz内のアルゴリズムによって自動で配置されますが、&lt;br /&gt;
SVGで出力できるため、他のソフトで調整ができます。&lt;/p&gt;

&lt;h1 id=&#34;使い方&#34;&gt;使い方&lt;/h1&gt;

&lt;h2 id=&#34;インストール&#34;&gt;インストール&lt;/h2&gt;

&lt;p&gt;brew gts graphviz&lt;/p&gt;

&lt;h2 id=&#34;dotファイルの作成&#34;&gt;dotファイルの作成&lt;/h2&gt;

&lt;p&gt;最初に見せたグラフは以下のように作ります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;digraph G {
  Hono[image=&amp;quot;th_hono.png&amp;quot;, label=&amp;quot;&amp;quot;, shape=plaintext];
  Koto[image=&amp;quot;th_koto.png&amp;quot;, label=&amp;quot;&amp;quot;, shape=plaintext];
  Umi[image=&amp;quot;th_umi.png&amp;quot;, label=&amp;quot;&amp;quot;, shape=plaintext];
  Maki[image=&amp;quot;th_maki.png&amp;quot;, label=&amp;quot;&amp;quot;, shape=plaintext];
  Rin[image=&amp;quot;th_rin.png&amp;quot;, label=&amp;quot;&amp;quot;, shape=plaintext];
  Pana[image=&amp;quot;th_pana.png&amp;quot;, label=&amp;quot;&amp;quot;, shape=plaintext];
  Nico[image=&amp;quot;th_nico.png&amp;quot;, label=&amp;quot;&amp;quot;, shape=plaintext];
  Nozo[image=&amp;quot;th_nozo.png&amp;quot;, label=&amp;quot;&amp;quot;, shape=plaintext];
  Eli[image=&amp;quot;th_eli.png&amp;quot;, label=&amp;quot;&amp;quot;, shape=plaintext];
  Yuki[label=&amp;quot;雪穂&amp;quot;];

  Nico -&amp;gt; Maki;
  Koto -&amp;gt; Umi;
  Rin -&amp;gt; Pana;
  Rin -&amp;gt; Maki;
  Nozo -&amp;gt; Eli;
  Nozo -&amp;gt; Nico;
  Koto -&amp;gt; Hono[dir = none];
  Hono -&amp;gt; Umi;
  Hono -&amp;gt; Nico;
  Hono -&amp;gt; Maki;
  Hono -&amp;gt; Yuki;
  Hono -&amp;gt; Eli;
  Hono -&amp;gt; Rin;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;初めにレイアウトに使うアルゴリズムを書きます。&lt;br /&gt;
次に画像だけ、文字だけといったノードを定義し、その関係を記述します。&lt;/p&gt;

&lt;h2 id=&#34;出力&#34;&gt;出力&lt;/h2&gt;

&lt;p&gt;上記のファイルをcp.dotという名前で保存し、以下のコマンドを実行するとSVGファイルに出力されます。&lt;br /&gt;
&lt;code&gt;dot -Tsvg cp.dot -o cp.svg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;SVG以外にもgifやpngへの出力が可能です。&lt;br /&gt;
&lt;code&gt;dot -Tpng cp.dot -o cp.png&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&#34;レイアウト詳細&#34;&gt;レイアウト詳細&lt;/h1&gt;

&lt;p&gt;配置アルゴリズム等はこちらの記事が参考になると思います。&lt;br /&gt;
&lt;a href=&#34;http://melborne.github.io/2013/04/02/graphviz-layouts/&#34;&gt;Graphvizレイアウトサンプル&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>