<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mac on おおたの物置</title>
    <link>http://ota42y.com/tags/mac/</link>
    <description>Recent content in Mac on おおたの物置</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 16 Aug 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://ota42y.com/tags/mac/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>AutomatorでEvernoteのノートリンクを置き換える</title>
      <link>http://ota42y.com/blog/2014/08/16/evernote-url/</link>
      <pubDate>Sat, 16 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2014/08/16/evernote-url/</guid>
      <description>

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;シェルスクリプトをAlfredから直接実行すると無駄にターミナルが立ち上がる&lt;/li&gt;
&lt;li&gt;Automatorならターミナルを立ち上げずにスクリプトを実行できる&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;automatorでスクリプトを実行する&#34;&gt;Automatorでスクリプトを実行する&lt;/h1&gt;

&lt;p&gt;前回(&lt;a href=&#34;http://ota42y.com/blog/2014/08/10/evernote-link/&#34;&gt;Evernoteのノートリンクが仕様変更で使い物にならないので何とかしようとした&lt;/a&gt;)
では、&lt;br /&gt;
スクリプトの実行方法が微妙たったのでもう少し修正してみました。&lt;/p&gt;

&lt;p&gt;結論としては、Macと標準で入っているAutomatorを使うことで、&lt;br /&gt;
ターミナルアプリを立ち上げずにシェルスクリプトを実行できます。&lt;/p&gt;

&lt;h1 id=&#34;automatorのワークフローを作る&#34;&gt;Automatorのワークフローを作る&lt;/h1&gt;

&lt;p&gt;単体のアプリケーションとして実行するため、&lt;br /&gt;
Automatorを立ち上げアプリケーションを選択します。&lt;/p&gt;

&lt;h2 id=&#34;実行ディレクトリの取得&#34;&gt;実行ディレクトリの取得&lt;/h2&gt;

&lt;p&gt;私の環境では、clipboardのインストール先はグローバルではなく、&lt;br /&gt;
スクリプトのあるフォルダにbundler専用のディレクトリを作り、&lt;br /&gt;
そこにインストールしています。&lt;/p&gt;

&lt;p&gt;そのため、スクリプトを実行するためにはそのパスに移動しないといけません。&lt;br /&gt;
ですが、Automatorを実行した場合、&lt;br /&gt;
カレントパスはユーザのホームディレクトリになり、&lt;br /&gt;
実行したファイルのディレクトリではありません。&lt;br /&gt;
参考: &lt;a href=&#34;http://mattintosh.hatenablog.com/entry/2013/03/19/152813&#34;&gt;iNSTANTWiNE or Wine.framework と Automator の連携&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;そのため、Apple Scriptを先に実行し、&lt;br /&gt;
Automatorの実行ファイルがあるパスを求め、&lt;br /&gt;
そこに移動するようにしています。&lt;/p&gt;

&lt;h2 id=&#34;自分自身のパスを求めるapple-script&#34;&gt;自分自身のパスを求めるApple Script&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;on run {input, parameters}
set p to POSIX path of (path to me)
return {p}

return input
end run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;AutomatorのAppleScriptを実行を選び、&lt;br /&gt;
このスクリプトを後述するシェルスクリプトの前に実行するようにします。&lt;br /&gt;
これでシェルスクリプトに引数としてパスを渡せます。&lt;/p&gt;

&lt;h2 id=&#34;evernote-urlを置換するスクリプト&#34;&gt;Evernote URLを置換するスクリプト&lt;/h2&gt;

&lt;p&gt;内容はほぼ前回と同じです。&lt;br /&gt;
ただし、各種環境設定は読み込んでくれないため、&lt;br /&gt;
sourceで読み込む必要があります。&lt;/p&gt;

&lt;p&gt;また、Automator側で引数の引き渡し方法を&lt;br /&gt;
&lt;code&gt;引数として&lt;/code&gt;に設定する必要もあります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source .zshrc

pushd $(dirname $1)

bundle exec ruby -e &amp;quot;
require &#39;clipboard&#39;

url = Clipboard.paste
r = Regexp.new(\&amp;quot;https://www.evernote.com/shard/s2/nl/([0-9]*)/(.*)/\&amp;quot;)
result = r.match url
if result
  new_url = \&amp;quot;evernote:///view/#{result[1]}/s2/#{result[2]}/#{result[2]}/\&amp;quot;
  p new_url
  Clipboard.copy new_url
end
&amp;quot;

popd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;こうして作ったアプリケーションを.appに書き出し、&lt;br /&gt;
Alfredから実行することでターミナルを立ち上げることなく、&lt;br /&gt;
クリップボードのノートリンクを置換できます。&lt;/p&gt;

&lt;h1 id=&#34;完成品&#34;&gt;完成品&lt;/h1&gt;

&lt;p&gt;できあがったスクリプトは&lt;br /&gt;
&lt;a href=&#34;https://github.com/ota42y/dotfiles/tree/master/home/.scripts/evernote_url_replace&#34;&gt;https://github.com/ota42y/dotfiles/tree/master/home/.scripts/evernote_url_replace&lt;/a&gt;&lt;br /&gt;
にあります。&lt;/p&gt;

&lt;p&gt;github上では.appがフォルダとして扱われていますが、&lt;br /&gt;
Mac上ではアプリケーションとして扱われます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Evernoteのノートリンクが仕様変更で使い物にならないので何とかしようとした</title>
      <link>http://ota42y.com/blog/2014/08/10/evernote-link/</link>
      <pubDate>Sun, 10 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2014/08/10/evernote-link/</guid>
      <description>

&lt;h1 id=&#34;まとめ&#34;&gt;まとめ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Evernoteのノートリンクの仕様が変わって使い物にならなくなった&lt;/li&gt;
&lt;li&gt;前の仕様でも動くので変換スクリプトを書いた&lt;/li&gt;
&lt;li&gt;ただし、Macではスクリプトの実行方法で問題あり&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;evernoteのノートリンク仕様の変更&#34;&gt;Evernoteのノートリンク仕様の変更&lt;/h1&gt;

&lt;p&gt;Evernoteでは図のように、「ノートリンクをコピー」で特定のノートに一対一対応するURIを取れます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ota42y.com/images/blog/2014/2014-08-10-evernote-link.jpg&#34; alt=&#34;Evernote link&#34; /&gt;&lt;/p&gt;

&lt;p&gt;この機能でコピーされるのは、これまでは evernote:///という独自スキームが使われていました。&lt;br /&gt;
そのため、開こうとするとEvernoteアプリが立ち上がり、対応するノートを開いてくれていました。&lt;br /&gt;
AndroidやiPhoneでもEvernoteアプリをインストールしてあれば、&lt;br /&gt;
同じようにアプリでノートを開いてくれるため、とても便利でした。&lt;/p&gt;

&lt;p&gt;しかし、最近の変更により、&lt;a href=&#34;https://www.evernote.com/&#34;&gt;https://www.evernote.com/&lt;/a&gt; へのリンクに変わってしまい、&lt;br /&gt;
ブラウザが起動してノートがEvernoteのサイト上で表示され、&lt;br /&gt;
そこからさらにEvernoteのアプリが開くという挙動になりました。&lt;/p&gt;

&lt;p&gt;これにより、モバイル端末などではEvernoteへの通信時間が余計にかかるようになったうえに、&lt;br /&gt;
オフライン状態ではノートを開くことができなくなってしまいました。&lt;/p&gt;

&lt;p&gt;正直使い物にならないレベルになってしまったのですが、&lt;br /&gt;
幸いなことにevernote:///スキームは未だ有効です。&lt;br /&gt;
また、必要な情報はどちらにも含まれているため、URIの変換スクリプトを書くことで対応可能です。&lt;/p&gt;

&lt;h1 id=&#34;リンク置換スクリプトの作成&#34;&gt;リンク置換スクリプトの作成&lt;/h1&gt;

&lt;h2 id=&#34;ノートリンクの仕様&#34;&gt;ノートリンクの仕様&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;以下は予想であり、正確なものではありません&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Evernoteのhttpsリンクは以下のようになっています。&lt;br /&gt;
&lt;code&gt;https://www.evernote.com/shard/s2/nl/ユーザ固有の文字列/ノート固有の文字列/&lt;/code&gt;&lt;br /&gt;
対して、evernote:///スキームは以下のようになっています。&lt;br /&gt;
&lt;code&gt;evernote:///view/ユーザ固有の文字列/s2/ノート固有の文字列/ノート固有の文字列/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;(ノート固有の文字列は二回とも同じ値になります)&lt;/code&gt;　　&lt;/p&gt;

&lt;p&gt;どちらもユーザ固有の文字列とノート固有の文字列は含まれているため、相互に変換可能です。&lt;/p&gt;

&lt;p&gt;Windowsならクリップボードの置換ソフトはたくさんあるのですが、&lt;br /&gt;
Macでは残念ながらまともな物はありませんでした。&lt;/p&gt;

&lt;p&gt;一応、&lt;a href=&#34;http://www.clipmenu.com/ja/&#34;&gt;ClipMenu&lt;/a&gt;は正規表現で置換ができますが、&lt;br /&gt;
それを実行するまでにかなりキーストロークが必要なため、見送りました。&lt;br /&gt;
理想は自動置換、最低でもスクリプトを簡単に実行できるのが最低条件です。&lt;/p&gt;

&lt;h2 id=&#34;リンク置換スクリプト&#34;&gt;リンク置換スクリプト&lt;/h2&gt;

&lt;p&gt;結局、クリップボードのURLをevernote:///に変換するスクリプトを作りました。&lt;br /&gt;
事前にclipboard gemをインストールしておく必要があります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash

pushd $(dirname $0)

bundle exec ruby -e &amp;quot;
require &#39;clipboard&#39;

url = Clipboard.paste
r = Regexp.new(\&amp;quot;https://www.evernote.com/shard/s2/nl/([0-9]*)/(.*)/\&amp;quot;)
result = r.match url
if result
  new_url = \&amp;quot;evernote:///view/#{result[1]}/s2/#{result[2]}/#{result[2]}/\&amp;quot;
  p new_url
  Clipboard.copy new_url
end
&amp;quot;

popd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これをevernote.commandという名前で保存して、&lt;br /&gt;
Alfredなどから実行すればいける！！と思ったのですが、&lt;br /&gt;
実行すると新たなターミナルが起動してスクリプトが実行され、&lt;br /&gt;
終了後にターミナルがそのまま残るという状態になってしまいました。&lt;/p&gt;

&lt;p&gt;毎回ターミナルを消すのは面倒すぎるので、とりあえずこの手法の採用は見送ることにします。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>