<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Book on おおたの物置</title>
    <link>http://ota42y.com/tags/book/</link>
    <description>Recent content in Book on おおたの物置</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 04 Oct 2018 00:21:50 +0000</lastBuildDate>
    
	<atom:link href="http://ota42y.com/tags/book/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Amazon Web Servicesサーバーレスレシピ という本を出します</title>
      <link>http://ota42y.com/blog/2018/10/04/2018-10-04/</link>
      <pubDate>Thu, 04 Oct 2018 00:21:50 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2018/10/04/2018-10-04/</guid>
      <description>Amazon Web Servicesサーバーレスレシピ という本が明日10/5に出ます。
元々技術書典で書いた本を更に加筆修正したものになります。
どんな本 この本は元々技術書典4で私も記事を書いた「Amazon Web Services サーバーレスレシピ 2018.04」がベースになっています。
技術書典4でAWSサーバーレス本出します！
実際にサーバレスアプリケーションを組み立てる上で、こういうふうに組み合わせればいいんだよみたいな例を乗っけたものになります。
私は主にAWS Serverless Application Model(SAM)でECサイトを作るみたいなことを書きました。
技術書典版との差分 技術書典版ではNode.jsでコードを書いていましたが、Go言語ですべて書き直しました。
冗長な部分を削ったり、薄かった本番デプロイの説明を暑くするなど、ほぼ同じテーマで書いたの別の本みたいな感じになっています。
Diffはこのぐらいですね…
さらに、Vue.jsでSPAを作って実際にサーバレスアプリケーションにアクセスしてみるといった部分を加筆しています。
また、湊川あいさんに、とても素晴らしい表紙も書いていただきました！
その他 技術書典4で本を出していたところ、お声がかかりこのような運びになり、大変うれしいです。
Amazon以外でも色んな所で売っているので是非！！！！
Amazon Web Servicesサーバーレスレシピ | 電子書籍とプリントオンデマンド（POD） | NextPublishing（ネクストパブリッシング）</description>
    </item>
    
    <item>
      <title>技術書展4でMicroservices architecture よろず本を出した</title>
      <link>http://ota42y.com/blog/2018/04/23/techbookfest_4/</link>
      <pubDate>Mon, 23 Apr 2018 10:00:50 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2018/04/23/techbookfest_4/</guid>
      <description>先日行われた技術書典4で、 Microservices architecture よろず本 を出しました。
足を伸ばして頂いた方、ありがとうございます。
#技術書典4 設営完了！！！ pic.twitter.com/7YawpUZrLw
&amp;mdash; おおた (@ota42y) 2018年4月22日 
当日は150部持ち込みましたが、13時頃には売り切れました。
どうもありがとうございます。
#技術書典4 紙は売り切れたので電子版800円になりますー https://t.co/Sovvm1paqY
&amp;mdash; おおた (@ota42y) 2018年4月22日 
当初は100部ぐらい売れてコミケに持って行けたらなーと思っており、かつチェック数的にも最後の方でギリギリ売り切れるかも…？
といった感じでしたので、こんなに早々に売り切れるのは予想外でした。
電子版を頒布していましたが、そちらも15:30頃には一時的に売り切れになり、足を伸ばして頂いた人は申し訳ありませんでした。
#技術書典4 電子本も売り切れました…増刷したやつがもうすぐ届くので、五分ほどお待ちください… https://t.co/Sovvm1paqY
&amp;mdash; おおた (@ota42y) 2018年4月22日 
Boothでも販売しておりますので、変えなかった方、買いそびれた方はご利用ください。
Microservices architecture よろず本 - ota42y - BOOTH（同人誌通販・ダウンロード）
感想 最終的には紙と電子合わせて250部以上を手にとって頂けました。
紙と電子合わせて250部持ち込んだので、用意していた分は全て無くなりました。
当日は売った数を記録していましたが上手く手順を共有することができず、 後半の電子書籍の売り上げがかなり適当になっています。
そのため、時間毎と言った詳しい販売実績は使えないデータになりました(´・_・`)
最初の1時間はもちろんのこと、およそ14時まではかなりの勢いで売れていました。
体感としても人の波はほとんど途切れていなかったので、相当な人数が来ているんだなという実感はありました。
実際、公式発表では6380人の参加者となっており、かなりの人数が参加されたようです。
なお、非チェック数は
   日付 数     一週間前 58   前日 121   当日 164   終了時 185    となっていました。</description>
    </item>
    
    <item>
      <title>技術書典4でMicroservices architectureよろず本を出します</title>
      <link>http://ota42y.com/blog/2018/04/10/microservices_yorozu_book/</link>
      <pubDate>Tue, 10 Apr 2018 04:21:50 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2018/04/10/microservices_yorozu_book/</guid>
      <description>Boothで電子版の販売をしています
Microservices architecture よろず本 - ota42y - BOOTH（同人誌通販・ダウンロード）
技術書典4の&amp;rdquo;か13&amp;rdquo;、「すべてがM(icro)になる」で、 Microservices architecture よろず本 を出します。
https://techbookfest.org/event/tbf04/circle/16650003
マイクロサービスアーキテクチャに関する様々な事を書いた本になります。
著者は私(@ota42y)と、@hyata、@qsona、@shinofumijp、@nobuhikosawai、@gemaの6人です。
人体ってマイクロサービスだよね、的な発言が著者人の1人からあったのでこんな表紙になっています。

目次は以下で、全77ページになります。
第 1 章 マイクロサービスとは何か？ 1.1 マイクロサービスどこから来たの？？ 1.2 マイクロサービスの特徴とは？ 1.3 マイクロサービスのメリットとは？ 1.4 マイクロサービスにデメリットはあるのか？ 1.5 おわりに 第 2 章 MS 将棋道場サービスの挑戦とマイクロサービス 2.1 プロローグ 2.2 将棋⼤会機能 - はじめてのマイクロサービス 2.3 指導サービス - 新しいサービス連携の形 2.4 MS 将棋道場本体サービスの分割 2.5 エピローグ 第 3 章 組織構造に基づいたサービス分割と⾮同期アーキテクチャ 3.1 はじめに 3.2 マイクロサービスの境界 3.3 実際の例 3.4 まとめ 第 4 章 マイクロサービスの育成⽅法 4.1 はじめに 4.</description>
    </item>
    
    <item>
      <title>UNIXという考え方という本を読んだ</title>
      <link>http://ota42y.com/blog/2015/01/04/unix-boox/</link>
      <pubDate>Sun, 04 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2015/01/04/unix-boox/</guid>
      <description>UNIXという考え方という本を読みました。
原著は1994年に書かれている本で、 UNIXの哲学を一つ一つ、その意味と利点について解説しています。
「一つのことを、うまくやれ」や「小さいものは美しい」等、ある程度ハッカー文化に詳しい人ならばどれかは聞いたことがあるぐらい有名な哲学です。
面白いのは、例えば「できるだけ早く試作を作成する」という項目では、設計を完璧にしてから取りかかるのではなく、 プロトタイプを作り、それをユーザに見せてフィードバックをもらい、良い設計にしていくべきと述べられています。
これはアジャイル開発のイテレーションを回していく手法ととても似ており、開発手法の歴史を感じます。
また、「一つのことを、うまくやれ」は色々やる巨大な関数より、ちゃんと機能毎に分割しろと解釈できますし、「ソフトウェアの挺子（てこ）を有効に活用する」は他のいいプログラムからコードを借りてきたり、gemやnpmで既にあるソフトウェアを利用するといった、コードの再利用性の話だと解釈できます。
原著は1994年に書かれたにもかかわらず、今日でも普通に通用する哲学がちりばめられており、UNIX哲学の現代のプログラミング文化への強い影響と、その普遍性をかんじます。
ただ、本書の中でシェルスクリプトが移植性もいいし簡潔に書けるしと礼賛されていますが、デバッグしにくい上に、コマンドがGNUかBSDかで結果が変わる場合があるので実は移植性がそんなに無いですし、現代ではちょっとどうなのかな…みたいな部分もあります。
今ですと、スクリプト言語かクロスコンパイルが簡単にできるGo言語が良い選択肢でしょうか。
そういった具体的な部分に関しては時代の変化で合わなくなっている部分もありますが、その哲学自体は普遍的なもので、今読んでも、おそらくは10年後に読んでも得るものが多い本だと思います。</description>
    </item>
    
    <item>
      <title>Webで何かを作る人誰もが読むべき本だった - ハイパフォーマンス ブラウザネットワーキング</title>
      <link>http://ota42y.com/blog/2014/05/13/browser-networking/</link>
      <pubDate>Tue, 13 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/blog/2014/05/13/browser-networking/</guid>
      <description>丸一日かけて読んだので書評っぽいのを。
Webで何かしようとする人はどのレイヤの人も必読だと思います。
インフラはもちろんのこと、アプリを作っている人も知らないでは済まされません。

ハイパフォーマンス ブラウザネットワーキング ―ネットワークアプリケーションのためのパフォーマンス最適化
#概要
目次としてはこんな感じで、TCP/UDPから無線ネットワークの特性から最新のプロトコルまで、
今のインターネットに触れる場合に触りそうな部分を、だいたいカバーしてます。
特にTCPとHTTP、WebRTCについてはとてもしっかりと書かれていました。
また具体的な最適化や、目次に乗っていない関係する技術に関してはかなりばっさり切り落としており、
取り扱っている内容の割にはすんなり読むことができました。
1章　レイテンシ・帯域幅入門 2章　TCPの構成要素 3章　UDPの構成要素 4章　TLS II部　ワイヤレスネットワークのパフォーマンス 5章　ワイヤレスネットワーク入門 6章　WiFi 7章　モバイルネットワーク 8章　モバイルネットワークの最適化 III部　HTTP 9章　HTTPの歴史 10章　Webパフォーマンス入門 11章　HTTP 1.x 12章　HTTP 2.0 13章　アプリケーション配信最適化 IV部　ブラウザAPIとプロトコル 14章　ブラウザネットワーク入門 15章　XMLHttpRequest 16章　Server-Sent Events 17章　WebSocket 18章　WebRTC  本のレベルとしては、3ウェイ・ハンドシェイクの基礎から教えてくれたりと、
かなり詳細に説明してくれるため、TCPやHTTPの詳しい知識は必要ありません。
だだし、ネットワークとは何かとかサーバとは何かとかの説明はないので、
最低限のネットワークの知識は必須です。
#感想
この本で特にいいと思ったところは、定義通りの何もしていない状態から、
順序立てて一つ一つ効率良くしていく様子を示している所です。
これはキープアライブからHTTPパイプラインの説明のところが顕著ですが、
まずはじめに何も考えずに愚直にやって、どれだけ無駄が多いかを説明し、
次にキープアライブを有効にすることでこれだけ無駄が省ける、
さらにHTTPパイプラインでこんなに無駄が省ける。</description>
    </item>
    
  </channel>
</rss>