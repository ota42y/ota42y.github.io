<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pages on おおたの物置</title>
    <link>http://ota42y.com/pages/</link>
    <description>Recent content in Pages on おおたの物置</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 27 Apr 2015 11:58:59 +0900</lastBuildDate>
    <atom:link href="http://ota42y.com/pages/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>2015年17週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-17/</link>
      <pubDate>Mon, 27 Apr 2015 11:58:59 +0900</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-17/</guid>
      <description>

&lt;h1 id=&#34;cpplintが便利そう:4d6f6f3ae9acaa6b2b7ea721f3040303&#34;&gt;cpplintが便利そう&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/AtomLinter/linter-cpplint&#34;&gt;AtomLinter/linter-cpplint&lt;/a&gt;&lt;br /&gt;
Google Style Guideに沿っているかをチェックしてくれるcpplintを、&lt;br /&gt;
Atom.ioから使えるようにしているPluginです。&lt;/p&gt;

&lt;p&gt;めっちゃ便利なのですが、標準だとcpplintのフィルターしか設定できず、&lt;br /&gt;
他のオプションを設定できないため、PRを送りました。&lt;br /&gt;
&lt;a href=&#34;https://github.com/AtomLinter/linter-cpplint/pull/12&#34;&gt;https://github.com/AtomLinter/linter-cpplint/pull/12&lt;/a&gt;&lt;br /&gt;
レビュー待ちです(o゜▽゜)&lt;/p&gt;

&lt;h1 id=&#34;apple-watch買った:4d6f6f3ae9acaa6b2b7ea721f3040303&#34;&gt;Apple Watch買った&lt;/h1&gt;

&lt;p&gt;たまたま発売日に秋葉原を歩いていたら売っていたのでつい買ってしまいました。&lt;br /&gt;
が、iPhoneをメインで使っているわけではないので、いまいち使い道が良くわからないです。&lt;br /&gt;
しばらくは見せるようですかね…&lt;/p&gt;

&lt;h1 id=&#34;fluentd-forwarderを触ってた:4d6f6f3ae9acaa6b2b7ea721f3040303&#34;&gt;fluentd-forwarderを触ってた&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/fluent/fluentd-forwarder&#34;&gt;fluent/fluentd-forwarder&lt;/a&gt;&lt;br /&gt;
Windowsのサーバで動かしているやつのログをとってくるの面倒だなー&lt;br /&gt;
と思っていたので、便利そうです(o゜▽゜)&lt;br /&gt;
とりあえず動かし方はわかったので、実際に入れてみようかと…&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年16週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-16/</link>
      <pubDate>Mon, 20 Apr 2015 07:36:53 +0900</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-16/</guid>
      <description>

&lt;h1 id=&#34;goの開発環境充実中:bf182f6030fd736d27d619234da1a3e4&#34;&gt;goの開発環境充実中&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;go fmt

&lt;ul&gt;
&lt;li&gt;goのフォーマットをぱぱっと修正してくれます。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;golint

&lt;ul&gt;
&lt;li&gt;動作に影響ないが推奨されないような部分を指摘し、何をすべきかを教えてくれます。&lt;/li&gt;
&lt;li&gt;goのコーディング規約に沿っていないチェックが主です&lt;/li&gt;
&lt;li&gt;IntelliJから使えれば最高なんですが…&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、goの公式ではないですが、以下のテスティングツールが便利そうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;goconvey

&lt;ul&gt;
&lt;li&gt;テストの自動実行&lt;/li&gt;
&lt;li&gt;go testの結果をブラウザで見やすくしてくれる&lt;/li&gt;
&lt;li&gt;標準のテストを拡張したテストライブラリとしての機能もある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;IntelliJ IDEA

&lt;ul&gt;
&lt;li&gt;go pluginを入れると凄い便利&lt;/li&gt;
&lt;li&gt;Windowsの場合はVM上のLinuxに立てて、ネットワークドライブでアクセスするといい

&lt;ul&gt;
&lt;li&gt;goconveyをLinuxで動かしてブラウザで見る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;勉強会参加:bf182f6030fd736d27d619234da1a3e4&#34;&gt;勉強会参加&lt;/h1&gt;

&lt;p&gt;家にこもると良いことないので、わりと勉強会に出てました。&lt;br /&gt;
だいたい行く前はめんどくさいなーとか、行っても意味ないんじゃ…みたいになるけど、&lt;br /&gt;
いざ行くとかなり満足するし、有用な情報が手に入るので難しいです…&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;blog/2015/04/14/golang-no-http-night/&#34;&gt;参加記録 GolangNotHttpNight（Gunosy.go#12&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;blog/2015/04/19/game-server-4/&#34;&gt;参加記録 第四回　ゲームサーバ勉強会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;タスク管理アプリ作ってる:bf182f6030fd736d27d619234da1a3e4&#34;&gt;タスク管理アプリ作ってる&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;v0.0.1出した

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ota42y/plaintodo/releases/tag/v0.0.1&#34;&gt;https://github.com/ota42y/plaintodo/releases/tag/v0.0.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;タスク閲覧機能のみ&lt;/li&gt;
&lt;li&gt;次はタスク追加機能とかつける&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>2015年15週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-15/</link>
      <pubDate>Mon, 13 Apr 2015 11:53:02 +0900</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-15/</guid>
      <description>

&lt;h1 id=&#34;atom-ioのstarでパッケージ管理:d98e074c42c4bcd9d2f6d106cbfe320e&#34;&gt;Atom.ioのstarでパッケージ管理&lt;/h1&gt;

&lt;p&gt;Atom.ioでは、パッケージのページ上でそのパッケージにスターをつけることができます。&lt;br /&gt;
&lt;a href=&#34;https://atom.io/packages/project-manager&#34;&gt;https://atom.io/packages/project-manager&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ここでスターをつけたパッケージはユーザのお気に入り扱いになり、&lt;br /&gt;
ユーザページ(例: &lt;a href=&#34;https://atom.io/users/ota42y&#34;&gt;https://atom.io/users/ota42y&lt;/a&gt; )上で確認できます。&lt;/p&gt;

&lt;p&gt;さらに、Atom.ioにはapmというパッケージ管理システムがついており、&lt;br /&gt;
これにstarsオプションを与えることで一覧を見ることや、&lt;code&gt;apm stars --install&lt;/code&gt;で、&lt;br /&gt;
ユーザのスターをつけたパッケージをすべてインストールできます。&lt;br /&gt;
&lt;a href=&#34;https://github.com/atom/apm/blob/master/src/stars.coffee&#34;&gt;https://github.com/atom/apm/blob/master/src/stars.coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;プラグインのバックアップはもちろんのこと、複数環境でのプラグイン同期にとても便利なので重宝します。&lt;/p&gt;

&lt;h1 id=&#34;タスク管理システム作ってる:d98e074c42c4bcd9d2f6d106cbfe320e&#34;&gt;タスク管理システム作ってる&lt;/h1&gt;

&lt;p&gt;最低限表示するだけのver. 0.0.1ができそうです。&lt;br /&gt;
&lt;a href=&#34;https://github.com/ota42y/plaintodo&#34;&gt;https://github.com/ota42y/plaintodo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;対話型インタフェースを作るのにlinerが凄い便利でした。&lt;br /&gt;
&lt;a href=&#34;http://ota42y.com/blog/2015/04/11/go-liner/&#34;&gt;golangのラインエディタはlinerが便利&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Travis.ciとか入れてCI回したいですが、テスト用コンテナでの依存パッケージの管理とか大変そうです…&lt;br /&gt;
godepやgomみたいなバージョン管理の導入を検討しますかね。&lt;/p&gt;

&lt;h1 id=&#34;第6回ニコニコ学会β-データ研究会に参加した:d98e074c42c4bcd9d2f6d106cbfe320e&#34;&gt;第6回ニコニコ学会β　データ研究会に参加した&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/blog/2015/04/12/niconico_data_6/&#34;&gt;参加記録 第6回ニコニコ学会β　データ研究会&lt;/a&gt;&lt;br /&gt;
今回の基調講演も発表もとてもおもしろかったです。&lt;br /&gt;
特に人狼はそこそこやっているため、とても参考になりました。&lt;br /&gt;
deviantARTは存在を知らなかったので、いろいろ調べてみたいですね…&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年14週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-14/</link>
      <pubDate>Mon, 06 Apr 2015 07:37:34 +0900</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-14/</guid>
      <description>

&lt;h1 id=&#34;pitが便利:694b6c6ee0002c07e107ab179febb18f&#34;&gt;pitが便利&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/cho45/pit&#34;&gt;cho45/pit&lt;/a&gt;&lt;br /&gt;
ユーザ名やキー等が必要な場合に、pitからロードするコードを書くことで、&lt;br /&gt;
保存されていればそれをロード、保存されていなければエディタを立ち上げて入力を促し、&lt;br /&gt;
結果をpitのディレクトリに保存してくれるものです。&lt;/p&gt;

&lt;p&gt;これにより、アプリにパスワードを埋め込んだり、自分でいちいちファイルから読み込む必要がなくなり、&lt;br /&gt;
秘密情報の管理がとても楽になります。&lt;/p&gt;

&lt;p&gt;golangにもpitがあるらしく、便利なのでgoで使ったやつにも入れようと思います。&lt;br /&gt;
&lt;a href=&#34;https://github.com/typester/go-pit&#34;&gt;https://github.com/typester/go-pit&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;changelogアプリに良いのがない:694b6c6ee0002c07e107ab179febb18f&#34;&gt;changelogアプリに良いのがない&lt;/h1&gt;

&lt;p&gt;githubの情報からchangelogを作ってくれるのはいくつかあります。&lt;br /&gt;
&lt;a href=&#34;https://github.com/skywinder/Github-Changelog-Generator/wiki/Alternatives&#34;&gt;https://github.com/skywinder/Github-Changelog-Generator/wiki/Alternatives&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ですが、どれも帯に短したすきに長しといった感じで、なかなか私が想定している使い方に合致した物がありません。&lt;br /&gt;
やっていることはそんなに難しくないはずなので、やはり自作するしか無いのでしょうか…&lt;br /&gt;
その場合、ある程度出力形式を変えられる形のがほしいですね。&lt;/p&gt;

&lt;p&gt;一応golangでgithubのapiラッパーはあるようです。&lt;br /&gt;
&lt;a href=&#34;https://github.com/google/go-github&#34;&gt;google/go-github&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年13週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-13/</link>
      <pubDate>Sun, 29 Mar 2015 10:37:34 +0900</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-13/</guid>
      <description>

&lt;h1 id=&#34;プロトタイプ展に行きました:c970b2167d590a8651f22cb3848b6111&#34;&gt;プロトタイプ展に行きました&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.design-lab.iis.u-tokyo.ac.jp/exhibition/proto2015/&#34;&gt;東京大学山中研究室プロトタイプ展2015 &amp;ldquo;PLAYFUL&amp;rdquo;&lt;/a&gt;に行きました。&lt;br /&gt;
全く同じ素材でも構造を変えることで、握ったり持ったりしたときの感触が全く違うのはおもしろかったです。&lt;br /&gt;
現代アートっぽいやつはよくわからなかったですが…&lt;/p&gt;

&lt;h1 id=&#34;goについて理解が深まった:c970b2167d590a8651f22cb3848b6111&#34;&gt;Goについて理解が深まった&lt;/h1&gt;

&lt;p&gt;Golangを多く触った一週間でした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ota42y.com/blog/2015/03/28/go_interface/&#34;&gt;GoのポインタはC++ポインタとは違う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gxuiで簡単なGUIアプリを作りました

&lt;ul&gt;
&lt;li&gt;gorutineのすばらしさを改めて感じる&lt;/li&gt;
&lt;li&gt;描画処理とは別に平行して処理をしたい場合にgorutineで簡単に書ける&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>2015年12週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-12/</link>
      <pubDate>Mon, 23 Mar 2015 07:34:46 +0900</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-12/</guid>
      <description>

&lt;h1 id=&#34;gxuiを触ってた:bbdc5216c1ff2ebffa850fb8e4bd1537&#34;&gt;gxuiを触ってた&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/google/gxui&#34;&gt;https://github.com/google/gxui&lt;/a&gt;&lt;br /&gt;
GoogleによるGolang制のクロスプラットフォームなGUIライブラリです。&lt;br /&gt;
クロスコンパイルは難しそうだけど、同じソースでビルドは普通にできそうです。&lt;br /&gt;
ざっと見た限り、必要最低限しか整ってない感じなので、これからに期待です。&lt;/p&gt;

&lt;h1 id=&#34;todoアプリ作成中:bbdc5216c1ff2ebffa850fb8e4bd1537&#34;&gt;Todoアプリ作成中&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/pages/summary/2015/week-09/&#34;&gt;http://ota42y.com/pages/summary/2015/week-09/&lt;/a&gt;でやろうとしていたTodoアプリを作成中です。&lt;br /&gt;
今月中にはできるかと思っていましたが、このサイトの作成に思った以上に時間をとられてしまい、あんまり進んでいないです…&lt;/p&gt;

&lt;p&gt;ただし、おおよその仕様はまとまりましたし、機能を大幅に削った最低ラインを決めました。&lt;br /&gt;
最低限使い物になるまで半分ぐらいなので、後2週間ぐらいで作り上げたいと思います。&lt;br /&gt;
&lt;a href=&#34;https://github.com/ota42y/plaintodo&#34;&gt;https://github.com/ota42y/plaintodo&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;hugoからの出力をgithub-pagesにアップロードする:bbdc5216c1ff2ebffa850fb8e4bd1537&#34;&gt;Hugoからの出力をGithub Pagesにアップロードする&lt;/h1&gt;

&lt;p&gt;Octopressの場合はGithub Pagesにアップロードしてくれるコマンドがありましたが、&lt;br /&gt;
Hugoの場合、特にそんなコマンドはないようです。&lt;br /&gt;
そのため、HugoがHTMLを出力するフォルダに、Github Pagesをcloneしておく必要があります。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年11週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-11/</link>
      <pubDate>Mon, 16 Mar 2015 07:34:46 +0900</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-11/</guid>
      <description>

&lt;h1 id=&#34;hugoに移行した:6bd09a8a6f76d3dafa276f77f1aaa1d8&#34;&gt;Hugoに移行した&lt;/h1&gt;

&lt;p&gt;このサイトは元々Octopressで動かしていましたが、Hugoに移行しました。&lt;br /&gt;
&lt;a href=&#34;http://ota42y.com/blog/2015/03/16/octopress_to_hugo/&#34;&gt;OctopressからHugoに乗り換えた&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;goのwindows開発環境を整えた:6bd09a8a6f76d3dafa276f77f1aaa1d8&#34;&gt;GoのWindows開発環境を整えた&lt;/h1&gt;

&lt;p&gt;IntelliJを使うとWindowsでも問題なく扱えます。&lt;br /&gt;
ただし、テストを実行するときはexeファイルを作ってから実行します。&lt;br /&gt;
そのため、テストのたびにウィルスソフトのスキャンが挟まるため、テストが無駄に遅いです…&lt;br /&gt;
特定のフォルダにexeファイルがはかれるため、そこだけ除外設定をしようかと検討中です。&lt;/p&gt;

&lt;h1 id=&#34;google-breakpad:6bd09a8a6f76d3dafa276f77f1aaa1d8&#34;&gt;google breakpad&lt;/h1&gt;

&lt;p&gt;マルチプラットフォームなクラッシュレポートみたいです。&lt;br /&gt;
iOS,Android,Mac,Windows等かなりのプラットフォームに対応しているのでよさそうです。&lt;br /&gt;
&lt;a href=&#34;https://code.google.com/p/google-breakpad/&#34;&gt;https://code.google.com/p/google-breakpad&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ちなみにMac OS10.9では以下のコマンドでビルドする必要があります。&lt;br /&gt;
(引用元は忘れました…stackoverflowだったはず）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xcodebuild -sdk macosx10.9 -project src/client/mac/Breakpad.xcodeproj -configuration Release -target Breakpad ARCHS=x86_64 ONLY_ACTIVE_ARCH=YES MACOSX_DEPLOYMENT_TARGET=10.8 GCC_VERSION=com.apple.compilers.llvm.clang.1_0
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>2015年10週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-10/</link>
      <pubDate>Mon, 09 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-10/</guid>
      <description>

&lt;h1 id=&#34;hugoを実験中:e975d64a31c4cd5e9fd296d1cb8af56a&#34;&gt;Hugoを実験中&lt;/h1&gt;

&lt;p&gt;今週はHugoに乗り換えるために、新しいサイト用のテンプレートを作っていました。&lt;/p&gt;

&lt;p&gt;ゼロから作ると、テンプレート作成の大変さが身にしみます…&lt;br /&gt;
デザインを考える部分はもちろんのこと、CSSとの格闘や、&lt;br /&gt;
フレームワークの使い方とかを調べる必要があり、中々大変です。&lt;/p&gt;

&lt;p&gt;また、golangのテンプレート機能については情報が少ないので、&lt;br /&gt;
やりたいことがあっても、普通に書くとうまくいかずに実現できない事が多々あったので、&lt;br /&gt;
あとでちゃんと勉強し直した方がよさそうです。&lt;/p&gt;

&lt;p&gt;最も、本来テンプレート層で複雑な操作はするべきではなく、コントローラー側で処理をし、&lt;br /&gt;
テンプレートは渡されたデータを表示するだけにした方が望ましいです。&lt;br /&gt;
ただ、今回はhugo側にはあまり手を加えるのは避けたいため、&lt;br /&gt;
コントローラ側に処理を追加する事が出来ず、テンプレート部分で頑張る必要がでてしまいました。&lt;br /&gt;
テンプレートとhugoの間に普通のgoで処理を追加できたらいいのですが…&lt;/p&gt;

&lt;p&gt;また、hugo側で用意されている奴を上手く使えばできる事も、&lt;br /&gt;
わざわざ自前でがんばって実装しようとしていたりしてて無駄が多いです…&lt;br /&gt;
サンプル集みたいなのがもう少し整っていると良い気がします。&lt;/p&gt;

&lt;p&gt;ただ、やはり速度は本当に早く、編集してから描画まで10秒ぐらいかかっていたのが一瞬で終わります。&lt;br /&gt;
テンプレートは今週末ぐらいに完成するはずなので、土日に入れ替えようと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年09週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-09/</link>
      <pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-09/</guid>
      <description>

&lt;p&gt;今年も15%が終わった…&lt;/p&gt;

&lt;h1 id=&#34;goのcronにpr送った:a2bb1f14b5d42b66ef310d7ad0a0c1ac&#34;&gt;GoのcronにPR送った&lt;/h1&gt;

&lt;p&gt;Goのcronとして&lt;a href=&#34;https://github.com/robfig/cron&#34;&gt;https://github.com/robfig/cron&lt;/a&gt;を使ってますが、&lt;br /&gt;
実行中か否かを取得できずに不便でした。&lt;br /&gt;
内部では管理しているので、それに対するゲッターを追加したPRを送りました。&lt;br /&gt;
&lt;a href=&#34;https://github.com/robfig/cron/pull/21&#34;&gt;https://github.com/robfig/cron/pull/21&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;hugoが良さそう:a2bb1f14b5d42b66ef310d7ad0a0c1ac&#34;&gt;Hugoが良さそう&lt;/h1&gt;

&lt;p&gt;このサイトはOctopressで運用しています。&lt;br /&gt;
ですが、記事数が増えてきたためか、変更して作り直すのに5秒ぐらいかかってしまいます。&lt;br /&gt;
ちょっとした変更でも若干時間がかるため、かなりストレスがたまる仕組みです…&lt;/p&gt;

&lt;p&gt;同じく静的サイトを作成するソフトウェアで、Hugoというものがあるそうです。&lt;br /&gt;
&lt;a href=&#34;https://github.com/spf13/hugo&#34;&gt;https://github.com/spf13/hugo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Goで書かれており、作成する速度がかなり早いらしいので、乗り換えを検討中です。&lt;br /&gt;
残念ながら、良い感じのテンプレートがないので、まずはそこから作る必要がありそうです。&lt;/p&gt;

&lt;h1 id=&#34;テキストベースのtodoアプリを考えた:a2bb1f14b5d42b66ef310d7ad0a0c1ac&#34;&gt;テキストベースのToDoアプリを考えた&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Todo.txtが行けてないので自分に合ったやつを考える&lt;/li&gt;
&lt;li&gt;スペースと改行ででサブタスクを指定

&lt;ul&gt;
&lt;li&gt;箇条書きがそのままサブタスクになる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;タスク名とサブタスク以外は全てオプションとして提供

&lt;ul&gt;
&lt;li&gt;優先度とかをベースシステムとしては持たない&lt;/li&gt;
&lt;li&gt;:due 2015-02-01とか、オプションとしてつける&lt;/li&gt;
&lt;li&gt;ベースはサブタスクとタスク名だけ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;多分こんな感じになります。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;タスク１ :due 2015-02-01
  サブタスク1 :due 2015-01-31
  サブタスク2 :due 2015-01-01 :repeat 1 week
    サブタスク3 :url http://example.com/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テキストベースで編集するのとは別に、CLIも作らないとダメですね。&lt;br /&gt;
フィルターとか、デフォルト値を入れて追加とかしにくいので…&lt;/p&gt;

&lt;p&gt;リポジトリはこれになります。&lt;br /&gt;
&lt;a href=&#34;https://github.com/ota42y/plaintodo&#34;&gt;https://github.com/ota42y/plaintodo&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;今やってるもの-これからやりたいこと:a2bb1f14b5d42b66ef310d7ad0a0c1ac&#34;&gt;今やってるもの＆これからやりたいこと&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;今やってること&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Goによるtumblr apiライブラリ&lt;/li&gt;
&lt;li&gt;進捗どうですか？時に画像もつけてほしくなった&lt;/li&gt;
&lt;li&gt;tumblr apiからランダムで取ってくるために、tumblrライブラリを作る

&lt;ul&gt;
&lt;li&gt;ついでにリブログもする&lt;/li&gt;
&lt;li&gt;node-tumblrがリブログしないので作った&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;goでやりたかっただけ&lt;/li&gt;

&lt;li&gt;&lt;p&gt;予定していた機能(投稿取得、リブログ)はだいたい完成&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;完全にカバーしてないけど、ほしい部分は出来た&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自分用自動化システム&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Goである程度の大きさのアプリを作るテスト&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;日々の作業を自動化&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;twitterの公式アカウントチェック&lt;/li&gt;
&lt;li&gt;チャットのログ保存等&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;hubotとhttp経由でやりとり出来るため、botのバックエンドとしても使える&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;いずれはhubotを全て置き換えるようにしたい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;結果通知部分はかなり良くない作りなので、そこは何とかしたい&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;そもそも設計もあまり良くない感じ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;進捗どうですか？の修正を入れたらしばらく放置&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;次にやろうとしているもの&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hugoのテンプレート作成&lt;/li&gt;

&lt;li&gt;&lt;p&gt;このサイトをベースに、色々不都合があるところを直す&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ToDoシステム(CLI)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;スペースを使った箇条書きがそのままサブタスクになる&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;テキストファイルを編集すると、そのままタスクに出来る&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;専用のCLIを使うことで、フィルターや繰り返しが出来る&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ToDoシステム(Android)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;普通にリストビューでタスク表示&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Dropboxを使ってデータは共有&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Androidメインなのでないと辛い&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;上記のCLIがある程度出来てから&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当面は下の3つを進めていく方向でいきます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年08週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-08/</link>
      <pubDate>Sun, 22 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-08/</guid>
      <description>

&lt;h1 id=&#34;todo-txtは思想は良いけど実際使うと微妙:a32b2cc8e9c86409bd3aff718e1a3967&#34;&gt;Todo.txtは思想は良いけど実際使うと微妙&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://todotxt.com/&#34;&gt;Todo.txt&lt;/a&gt;
テキストオンリーでTodo管理ができる手法です。&lt;br /&gt;
ファイルをDropboxに置くことで、&lt;br /&gt;
どこでも同期してTodo管理ができるようになります。&lt;/p&gt;

&lt;p&gt;本当に単なるテキストなので管理が簡単で、エディタで編集も容易です。&lt;br /&gt;
コマンドラインから条件を指定して表示できるのも便利で良い感じでした。&lt;br /&gt;
RTM CLIのオフライン版みたいな使い勝手です。&lt;/p&gt;

&lt;p&gt;ただし、サブタスクが使えないという問題があります。
一応プラグインとして用意されてはいますが、&lt;br /&gt;
そうすると他のプラグインが使えなくなってしまうため、別の問題が発生してしまいます。&lt;/p&gt;

&lt;p&gt;このテキストベースという考え方はすごく良く、かつ作るのもそんなに大変じゃなさそうなので、&lt;br /&gt;
自分で作ってみた方が早そうです。&lt;/p&gt;

&lt;h1 id=&#34;windown-on-linuxで開発環境を整える:a32b2cc8e9c86409bd3aff718e1a3967&#34;&gt;Windown on Linuxで開発環境を整える&lt;/h1&gt;

&lt;p&gt;Windowsで開発環境を整えるのは恐ろしく大変です。&lt;br /&gt;
幸いなことに私のWindowsマシンは十分なスペックがあるため、&lt;br /&gt;
VMware上にLinuxを立てて、SSHとファイル共有でしのぐことにしました。&lt;/p&gt;

&lt;p&gt;IDEとかはWindows側で動かしているため、IDEの実行ボタンが使えなくなるのがかなりつらいですが、&lt;br /&gt;
Windows上で開発するよりかは幾分マシになっていると思います。&lt;/p&gt;

&lt;p&gt;ただし、IDEからデバッガが使えないため、そのあたりでつらい現実が待っている気がします。&lt;br /&gt;
実行環境はリモートで、みたいなことができれば良いのですが…&lt;/p&gt;

&lt;p&gt;普段ターミナルでしか作業をしないのであれば、ターミナルの中が変わるだけなので問題ないと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年07週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-07/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-07/</guid>
      <description>

&lt;p&gt;既に今年の1/8が終わっているという事実…&lt;/p&gt;

&lt;h1 id=&#34;jenkinsのworkflow-pluginがとても便利:199b01a6c63e246a45b954855c93d154&#34;&gt;JenkinsのWorkflow Pluginがとても便利&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/blog/2015/02/10/workflow-plugin/&#34;&gt;Jenkins Workflow Pluginで複数slaveを扱うのが楽になる&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://ota42y.com/blog/2015/02/11/jenkins-workflow/&#34;&gt;Jenkins Workflow Pluginでリポジトリ内のスクリプトを読み込む時の注意点 &lt;/a&gt;&lt;br /&gt;
にまとめています。
Build Flow Pluginを多用していたならば、こっちに乗り換えた方がいろいろ楽ですね。&lt;/p&gt;

&lt;p&gt;ただし、まだ出たばかりでバグがあったり、所々かゆいところに手が届かなかったりするので、&lt;br /&gt;
その辺の辛いところは結構あります…&lt;/p&gt;

&lt;h1 id=&#34;remember-the-milkが使いにくく感じる:199b01a6c63e246a45b954855c93d154&#34;&gt;Remember The Milkが使いにくく感じる&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;良い点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;タスクの追加時に独自の記法で様々な条件をつけられる&lt;/li&gt;
&lt;li&gt;オフラインでAndroid, iOSで見られる(有料)&lt;/li&gt;
&lt;li&gt;繰り返し処理、期日等の設定が十分に豊富&lt;/li&gt;
&lt;li&gt;Evernotのノートとタスクを関連づけれる&lt;/li&gt;
&lt;li&gt;タスクと参考資料をくっつけられる&lt;/li&gt;
&lt;li&gt;ただし、RTM側でつけられる細かい情報をつけられない&lt;/li&gt;
&lt;li&gt;そのため設定はRTMでする必要があり、そこまで便利ではない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;悪い点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PC上で使いづらい&lt;/li&gt;
&lt;li&gt;ブラウザアプリはURLをショートカットキーで使えない&lt;/li&gt;
&lt;li&gt;送信済みリスト等、複数人での作業用機能がOFFにできない&lt;/li&gt;
&lt;li&gt;別のリストに移動するショートカットキーがない&lt;/li&gt;
&lt;li&gt;サブタスクが使えない&lt;/li&gt;
&lt;li&gt;特定のタスクを細かく分割できない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;特にサブタスクが使えず、かつリスト操作が弱いのがものすごく不便で、&lt;br /&gt;
特定の大タスクに対してやることをざっと書き出したときに、&lt;br /&gt;
それを上手くまとめられず、タスクの優先順位等がわかり辛くなります。&lt;/p&gt;

&lt;p&gt;もっとも、オフライン機能とか追加時のUIとかはすごく良いのでまだぎりぎり使えますが、&lt;br /&gt;
代わりのサービスを探すか作るかしようと思います…&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年06週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-06/</link>
      <pubDate>Mon, 09 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-06/</guid>
      <description>

&lt;p&gt;ちゃんとその週に何をやったかをまとめると、&lt;br /&gt;
今週はあんまり活動していない事がよくわかりますね…&lt;/p&gt;

&lt;h1 id=&#34;jenkins-workflow-pluginが素晴らしそう:d8557742a33269e75592dd05f8ca14f3&#34;&gt;Jenkins Workflow Pluginが素晴らしそう&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/blog/2015/01/11/jenkins-conference/&#34;&gt;Jenkins ユーザ・カンファレンス 2015 東京&lt;/a&gt;で知った、Workflow Pluginが思った以上に良さそうです。&lt;br /&gt;
Jenkins本体の機能では出来ないmaster/slaveを選択してコマンドを実行するといったことが可能になり、&lt;br /&gt;
効率の良い分散ビルドが出来るようになります。&lt;/p&gt;

&lt;p&gt;そのうち詳しくまとめる予定…&lt;/p&gt;

&lt;h1 id=&#34;思った以上にtwitterに時間を取られる:d8557742a33269e75592dd05f8ca14f3&#34;&gt;思った以上にTwitterに時間を取られる&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.binerx.aptrax&amp;amp;hl=ja&#34;&gt;Aptrax | App Usage Tracker&lt;/a&gt;というツールで、&lt;br /&gt;
スマホの各アプリの使用時間を計測していますが、Twitterの使用率が凄い結果になっていました。&lt;/p&gt;

&lt;p&gt;PC上で見ている時間も結構多く、かなりの時間を浪費している気がします…&lt;br /&gt;
重要なことだけ抜き出してできる限り見ないみたいな事が必要ですね。&lt;/p&gt;

&lt;h1 id=&#34;twieveでツイートをevernoteに保存:d8557742a33269e75592dd05f8ca14f3&#34;&gt;twieveでツイートをevernoteに保存&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://twieve.net/&#34;&gt;twieve&lt;/a&gt;を使って、ツイートをevernoteに保存するようにしました。&lt;br /&gt;
これでやってることを呟いておけば、今週何をやったかを簡単に思い出せるようになるはずです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年05週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-05/</link>
      <pubDate>Mon, 02 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-05/</guid>
      <description>

&lt;p&gt;今週は二日ほど有給を取っていました。&lt;br /&gt;
家で引きこもっていましたが、かなり有効に引きこもれたと思います。&lt;/p&gt;

&lt;p&gt;毎日色々していますが、やりたいことがどんどん増えてきます…&lt;br /&gt;
効率をあげるにも限度がありますし、どうしたものですかね。&lt;/p&gt;

&lt;h1 id=&#34;jenkins-workflow-plugin便利そう:0a9f63ef88aa5725c211cf9c12af5010&#34;&gt;Jenkins Workflow Plugin便利そう&lt;/h1&gt;

&lt;p&gt;Jenkins ユーザ・カンファレンス 2015で聞いた&lt;a href=&#34;https://github.com/jenkinsci/workflow-plugin&#34;&gt;jenkinsci/workflow-plugin&lt;/a&gt;を試しています。&lt;br /&gt;
スレーブを指定してタスクを実行できたり、ファイルをスレーブから取ってきて別のスレーブに渡す等、&lt;br /&gt;
今までBuild Pipeline Pluginでやっていたことがだいたい実現できて凄く良いです。&lt;br /&gt;
あとはプロパティ等をファイルから読み込む方法さえ解れば完璧なのですが…&lt;/p&gt;

&lt;h1 id=&#34;evernoteリンクを開くchrome拡張の更新:0a9f63ef88aa5725c211cf9c12af5010&#34;&gt;Evernoteリンクを開くChrome拡張の更新&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/blog/2015/01/31/evernote-opener-update/&#34;&gt;http://ota42y.com/blog/&lt;sup&gt;2015&lt;/sup&gt;&amp;frasl;&lt;sub&gt;01&lt;/sub&gt;/31/evernote-opener-update/&lt;/a&gt;&lt;br /&gt;
便利なのですが、新しいPCに設定する際にとても不便だったので楽に修正できるように機能拡張しました。&lt;/p&gt;

&lt;h1 id=&#34;jenkinsのライブラリよさそう:0a9f63ef88aa5725c211cf9c12af5010&#34;&gt;Jenkinsのライブラリよさそう&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/yosida95/golang-jenkins&#34;&gt;https://github.com/yosida95/golang-jenkins&lt;/a&gt;&lt;br /&gt;
Webの反応めちゃくちゃ遅いので、よく見る結果とかはチャットに流せないかと思って見ています。&lt;br /&gt;
(こっちの方がいろいろそろってるかも &lt;a href=&#34;https://github.com/bndr/gojenkins&#34;&gt;https://github.com/bndr/gojenkins&lt;/a&gt;)&lt;/p&gt;

&lt;h1 id=&#34;remember-the-milkのcliを使ってみた:0a9f63ef88aa5725c211cf9c12af5010&#34;&gt;Remember The MilkのCLIを使ってみた&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.rememberthemilk.jp/2012/10/featured-app-rtm-cli/&#34;&gt;RTM-CLI&lt;/a&gt;なるものがあるらしいので使ってみました。&lt;br /&gt;
Web版は微妙に使いにくいので反応が早いこいつを試してみましたが、微妙でした。&lt;br /&gt;
キャッシュされないために毎回認証して取ってくるので反応が悪く、&lt;br /&gt;
速度を求めた場合の乗り換え先としては良くありませんでした。&lt;br /&gt;
これにキャッシュ機能がつけばおそらく完璧なのですが、現状のコマンドラインツールだと厳しそうですね…&lt;/p&gt;

&lt;h1 id=&#34;ライブに参加していた:0a9f63ef88aa5725c211cf9c12af5010&#34;&gt;ライブに参加していた&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.lovelive-anime.jp/sp_5thlive.html&#34;&gt;μ&amp;rsquo;s Go→Go! LoveLive! 2015 ～Dream Sensation!&lt;/a&gt;に参加してました。&lt;br /&gt;
風邪やインフルエンザの可能性を減らすために、2日前から有給取って家に引きこもっていました。&lt;br /&gt;
1日目はチケットが取れなかったのでLVで、2日目は開場でしかもアリーナAブロックでした。&lt;br /&gt;
前回の映像は何回も見ていましたが、やっぱり映像よりもLVがいいですし、&lt;br /&gt;
LVよりも会場の方が何十倍も凄かったです。&lt;br /&gt;
文才が無いのでこれぐらいにとどめておきますが、次のライブは両日当たるまで応募券を買おうと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年04週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-04/</link>
      <pubDate>Mon, 26 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-04/</guid>
      <description>

&lt;p&gt;先週やったことまとめ&lt;br /&gt;
以外とあまりやってない。&lt;br /&gt;
作りたいものは増えていくけど時間は無い。&lt;/p&gt;

&lt;h1 id=&#34;tumblrクライアント作ってる:20917bd895e9b9e9889f0b97011e9e96&#34;&gt;tumblrクライアント作ってる&lt;/h1&gt;

&lt;p&gt;info APIだけはできた。Posts APIを作りたいけど、ちょっとめんどくさそう。&lt;br /&gt;
複数の型を一つの配列で返して来るので、どうやって同じ配列に入れようか…&lt;br /&gt;
たぶん全部入りのクラスで取り出して、個別のクラスに入れていく形になるかと。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://play.golang.org/p/tVLoIDVk--&#34;&gt;http://play.golang.org/p/tVLoIDVk&amp;ndash;&lt;/a&gt;
この技を使えば違う型でも共通の配列に入れられるはず&lt;/p&gt;

&lt;h1 id=&#34;情報科学若手の会冬の陣2015に参加した:20917bd895e9b9e9889f0b97011e9e96&#34;&gt;情報科学若手の会冬の陣2015に参加した&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/blog/2015/01/25/wakate2015w/&#34;&gt;参加記録 情報科学若手の会冬の陣2015&lt;/a&gt;&lt;br /&gt;
発表したい人生だった… _ (:3 」∠)_&lt;br /&gt;
が、ここ半年間はずっと一日に使える時間が1〜2時間程度、かつ仕事は情報科学っぽい事をしてないので、&lt;br /&gt;
発表ネタが全く作れないという…&lt;br /&gt;
というか、特に技術的に成長してない気がするし、このままの生活を続けて大丈夫なのだろうか…&lt;/p&gt;

&lt;h1 id=&#34;remember-the-milk使いやすいが使いにくい:20917bd895e9b9e9889f0b97011e9e96&#34;&gt;Remember The Milk使いやすいが使いにくい&lt;/h1&gt;

&lt;p&gt;わりといい線行ってるサービスだけど、Webクライアントが使いにくいのでちょっと残念。&lt;br /&gt;
URLをショートカットから開けなかったり、ヘッダー画像が邪魔だったり…&lt;br /&gt;
サブタスクが無いのもそれはそれで使いにくいですね。&lt;/p&gt;

&lt;p&gt;ただ、オフラインでスマホで見られますし、繰り返し設定など様々な設定が凄く楽にできる等&lt;br /&gt;
機能的にはいいですし、UIもいいのであともう一声って感じですね…&lt;br /&gt;
コマンドラインから対話的に操作できれば解決できそうな気がします。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2015年03週目まとめ</title>
      <link>http://ota42y.com/pages/summary/2015/week-03/</link>
      <pubDate>Sat, 17 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ota42y.com/pages/summary/2015/week-03/</guid>
      <description>

&lt;h1 id=&#34;jenkins-ユーザ-カンファレンス-2015-東京:0282d24ace517fed681b3eee41dbf8dc&#34;&gt;Jenkins ユーザ・カンファレンス 2015 東京&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://ota42y.com/blog/2015/01/11/jenkins-conference/&#34;&gt;参加しました&lt;/a&gt;&lt;br /&gt;
Workflow Plugin等を導入したいのですが、&lt;br /&gt;
現在クリティカルパス上の作業をしているために手が回りません…&lt;br /&gt;
運用コストを下げられるので是非入れたいのですが、&lt;br /&gt;
どうしても優先度は下がってしまいますね…&lt;/p&gt;

&lt;h1 id=&#34;tumblrのgolang用ライブラリ:0282d24ace517fed681b3eee41dbf8dc&#34;&gt;Tumblrのgolang用ライブラリ&lt;/h1&gt;

&lt;p&gt;見当たらなかったので作成中(まだ何も動きません)&lt;br /&gt;
&lt;a href=&#34;https://github.com/ota42y/go-tumblr&#34;&gt;https://github.com/ota42y/go-tumblr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;goのテストは特殊なフレームワークとか作らずに、普通にコードとして書くのを推奨しているそうです。&lt;br /&gt;
rspecとかで専用のフレームワークにそって作るのとは大違い。&lt;br /&gt;
書くのは面倒だけど、フレームワークの知識が無くても大丈夫というのは良いかもしれません。&lt;/p&gt;

&lt;p&gt;フレームワークの学習コストとそれによって得る効率化と、使わないことによる効率の低下とどっちが得なのでしょうか。
あと外部APIなので秘密情報をどうやってテストの時に設定するかが課題です。&lt;br /&gt;
毎回書いては消すのはとても面倒なので…&lt;/p&gt;

&lt;h1 id=&#34;uiと強結合しているテスト:0282d24ace517fed681b3eee41dbf8dc&#34;&gt;UIと強結合しているテスト&lt;/h1&gt;

&lt;p&gt;cocos2d-xを使ってiPhoneアプリを作成していると、ゲームUIでTDDとかするのは実質不可能ではないかなと思います。
これはおそらくUI層の正しさが、状態に強く依存するのが原因です。&lt;/p&gt;

&lt;p&gt;ボタンを配置してタッチで特定のメソッドを呼び出すような場合、&lt;br /&gt;
ボタンが画面上に表示されるかは、他のよりZ座標が大きいオブジェクトと被さっていないかをチェックする必要や、&lt;br /&gt;
より優先度の高いタッチオブジェクトが存在しないかといったことをチェックする必要があります。&lt;br /&gt;
さらに、演出中は表示されるけどタッチは出来ないなど、その部分以外の所の状態によって結果を変える必要があります。&lt;/p&gt;

&lt;p&gt;つまり、新しいボタンを配置するためには様々な状態のテストを作成し、&lt;br /&gt;
かつほかのオブジェクトに対して新しい状態を追加することになるため、テストの変更がとても大きくなります。&lt;br /&gt;
そのため、UI層でテストをする場合、作成・維持ともにとても大きくなっていくため、&lt;br /&gt;
完全に不可能ではないですがコストか高く、現実的に出来るものではありません。&lt;/p&gt;

&lt;p&gt;ただし、UIコンポーネントについて個別にテストするのは有効だと思います。&lt;br /&gt;
例えばボタンクラスであればタッチした時に、コールバックが呼ばれるか、範囲外の時に呼ばれないか等です。&lt;br /&gt;
ただし、UIを作る際に個別にクラスを作ることはそんなに多くなく、&lt;br /&gt;
多くがコンポーネントの配置と、その画面専用ロジックとのつなぎになるため、大きな効果は見込めなさそうです。&lt;/p&gt;

&lt;p&gt;なお、ゲームはそもそも共通で使う部分が少なく、画面内の状態がとても多いという前提があります。&lt;br /&gt;
例えば通販サイトではヘッダーやサイドバーは共通で使い、メインの部分とは独立していますし、&lt;br /&gt;
メインの部分も商品データが違うだけでテンプレートは同じといったように、共通で使う部分が多いので、&lt;br /&gt;
そのような部分のテストは有効ではないかと思います。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>